ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.fputc,"ax",%progbits
  20              		.align	1
  21              		.global	fputc
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	fputc:
  27              	.LVL0:
  28              	.LFB135:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "can.h"
  23:Core/Src/main.c **** #include "i2c.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include "bsp_can.h"
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 2


  30:Core/Src/main.c **** #include "pid.h"
  31:Core/Src/main.c **** #include <stdio.h>
  32:Core/Src/main.c **** #include <string.h>
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END Includes */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c **** /* USER CODE END PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** PID_TypeDef motor_pid[4]; //速度环参数
  64:Core/Src/main.c **** PID_TypeDef angle_pid[2]; //位置环参数
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** uint8_t ReceiveBuffer[6] = {0}; //IIC接收缓冲区
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** PID_TypeDef abs_pid[2];           //绝对角度（自稳，陀螺仪）
  69:Core/Src/main.c **** float ABS_Gimbal_angle[2] = {0};  //云台绝对角度(自稳) {yaw, pitch}, 0-8192 3400-6000
  70:Core/Src/main.c **** int16_t ABS_IMU_angle[2] = {0};   //归一化之后的IMU角度，用于自稳 {yaw, pitch}, 0-8192
  71:Core/Src/main.c **** int16_t IMU_Angle_Raw[3] = {0};   //接收到的陀螺仪欧拉角
  72:Core/Src/main.c **** float IMU_Angle[3] = {0};         //转化为浮点的陀螺仪欧拉角
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** int16_t Gimbal_angle[2] = {7500, 4800};   //云台角度设定 {yaw, pitch}，编码器
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** int current_limit = 2000; //限流
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** int i = 0;
  79:Core/Src/main.c **** int j = 0;
  80:Core/Src/main.c **** int current = 0;
  81:Core/Src/main.c **** int speed = 0;
  82:Core/Src/main.c **** int time = 0;
  83:Core/Src/main.c **** int speed_set = 0;
  84:Core/Src/main.c **** /* USER CODE END 0 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /**
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 3


  87:Core/Src/main.c ****   * @brief  The application entry point.
  88:Core/Src/main.c ****   * @retval int
  89:Core/Src/main.c ****   */
  90:Core/Src/main.c **** int main(void)
  91:Core/Src/main.c **** {
  92:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  93:Core/Src/main.c ****   /* USER CODE END 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  98:Core/Src/main.c ****   HAL_Init();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* USER CODE END Init */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Configure the system clock */
 105:Core/Src/main.c ****   SystemClock_Config();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Initialize all configured peripherals */
 112:Core/Src/main.c ****   MX_GPIO_Init();
 113:Core/Src/main.c ****   MX_CAN1_Init();
 114:Core/Src/main.c ****   MX_USART1_UART_Init();
 115:Core/Src/main.c ****   MX_I2C2_Init();
 116:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 117:Core/Src/main.c ****   
 118:Core/Src/main.c **** 	HAL_CAN_Start(&hcan1);
 119:Core/Src/main.c **** 	my_can_filter_init_recv_all(&hcan1);
 120:Core/Src/main.c **** 	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);  // enable IT
 121:Core/Src/main.c **** 	
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* USER CODE END 2 */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* Infinite loop */
 126:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   //YAW轴PID
 129:Core/Src/main.c ****   pid_init(&motor_pid[0]); //速度环
 130:Core/Src/main.c ****   motor_pid[0].f_param_init(&motor_pid[0],PID_Speed,current_limit,5000,0,0,0,8000,61.4656753,0.6697
 131:Core/Src/main.c ****   pid_init(&angle_pid[0]); //位置环（相对位置）
 132:Core/Src/main.c ****   angle_pid[0].f_param_init(&angle_pid[0],PID_Speed,300,300,0,0,4000,0,1.3713,0.00495369,94.8474*0)
 133:Core/Src/main.c ****   pid_init(&abs_pid[0]); //位置环（自稳）
 134:Core/Src/main.c ****   abs_pid[0].f_param_init(&abs_pid[0],PID_Speed,300,300,0,0,4000,0,-0.9,-0.003,-3);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   //Pitch轴PID
 137:Core/Src/main.c ****   pid_init(&motor_pid[1]); //速度环
 138:Core/Src/main.c ****   motor_pid[1].f_param_init(&motor_pid[1],PID_Speed,current_limit,5000,0,0,0,8000,4.01239768,3.0348
 139:Core/Src/main.c ****   pid_init(&angle_pid[1]); //位置环（相对位置）
 140:Core/Src/main.c ****   angle_pid[1].f_param_init(&angle_pid[1],PID_Speed,500,500,0,0,4000,0,1.27137,0.01084,27.877753*0.
 141:Core/Src/main.c ****   pid_init(&abs_pid[1]); //位置环（自稳）
 142:Core/Src/main.c ****   abs_pid[1].f_param_init(&abs_pid[1],PID_Speed,300,300,0,0,4000,0,0.5,0,10);
 143:Core/Src/main.c **** 
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 4


 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   printf("--------------init--------------\n");
 147:Core/Src/main.c ****   HAL_I2C_Slave_Receive_IT(&hi2c2,ReceiveBuffer,sizeof(ReceiveBuffer));
 148:Core/Src/main.c ****   while (1)
 149:Core/Src/main.c ****   {
 150:Core/Src/main.c ****     /* USER CODE END WHILE */
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 153:Core/Src/main.c ****   
 154:Core/Src/main.c ****     switch (ABS_ANGLE_STABLE_MODE)
 155:Core/Src/main.c ****     {
 156:Core/Src/main.c ****     case SPEED_PID_TUNING: 
 157:Core/Src/main.c ****         speed_loop_PID_tuning(0);
 158:Core/Src/main.c ****       break;
 159:Core/Src/main.c ****     
 160:Core/Src/main.c ****     case ABS_ANGLE_PID_TUNING: 
 161:Core/Src/main.c ****         Abs_anglelop_PID_tuning(0);
 162:Core/Src/main.c ****       break;
 163:Core/Src/main.c ****     
 164:Core/Src/main.c ****     case REL_ANGLE_PID_TUNING:
 165:Core/Src/main.c ****         Rel_angleloop_PID_tuning(0);
 166:Core/Src/main.c ****       break;
 167:Core/Src/main.c ****     
 168:Core/Src/main.c ****     case ABS_ANGLE_PID_TEST:
 169:Core/Src/main.c ****         Abs_angle_PID_test_loop(0);
 170:Core/Src/main.c ****       break;
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****     case REL_ANGLE_PID_TEST:
 173:Core/Src/main.c ****         Rel_angle_PID_test_loop(0);
 174:Core/Src/main.c ****       break;
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****     case ABS_ANGLE_STABLE_MODE:
 177:Core/Src/main.c ****         Abs_angle_control_loop();
 178:Core/Src/main.c ****       break;
 179:Core/Src/main.c ****     
 180:Core/Src/main.c ****     case REL_ANGLE_STABLE_MODE:
 181:Core/Src/main.c ****         Rel_angle_control_loop();
 182:Core/Src/main.c ****       break;
 183:Core/Src/main.c ****     
 184:Core/Src/main.c ****     }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****     /*Debug*/
 187:Core/Src/main.c ****     if(false)
 188:Core/Src/main.c ****     {
 189:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 190:Core/Src/main.c ****     HAL_Delay(100);
 191:Core/Src/main.c ****     }
 192:Core/Src/main.c ****     i++;
 193:Core/Src/main.c ****     j++;
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c ****   /* USER CODE END 3 */
 196:Core/Src/main.c **** }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c **** /**
 199:Core/Src/main.c ****   * @brief System Clock Configuration
 200:Core/Src/main.c ****   * @retval None
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 5


 201:Core/Src/main.c ****   */
 202:Core/Src/main.c **** void SystemClock_Config(void)
 203:Core/Src/main.c **** {
 204:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 205:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 210:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 213:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 216:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 217:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 223:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 224:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 225:Core/Src/main.c ****   {
 226:Core/Src/main.c ****     Error_Handler();
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 230:Core/Src/main.c ****   */
 231:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 232:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 233:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 234:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 235:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 236:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 239:Core/Src/main.c ****   {
 240:Core/Src/main.c ****     Error_Handler();
 241:Core/Src/main.c ****   }
 242:Core/Src/main.c **** }
 243:Core/Src/main.c **** 
 244:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 245:Core/Src/main.c **** 
 246:Core/Src/main.c **** int fputc(int ch, FILE *f)
 247:Core/Src/main.c **** {
  30              		.loc 1 247 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 247 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 6


  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 16
  42 0004 0190     		str	r0, [sp, #4]
 248:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xffff);
  43              		.loc 1 248 3 is_stmt 1 view .LVU2
  44 0006 4FF6FF73 		movw	r3, #65535
  45 000a 0122     		movs	r2, #1
  46 000c 01A9     		add	r1, sp, #4
  47              	.LVL1:
  48              		.loc 1 248 3 is_stmt 0 view .LVU3
  49 000e 0348     		ldr	r0, .L3
  50              	.LVL2:
  51              		.loc 1 248 3 view .LVU4
  52 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  53              	.LVL3:
 249:Core/Src/main.c ****   return ch;
  54              		.loc 1 249 3 is_stmt 1 view .LVU5
 250:Core/Src/main.c **** }
  55              		.loc 1 250 1 is_stmt 0 view .LVU6
  56 0014 0198     		ldr	r0, [sp, #4]
  57 0016 03B0     		add	sp, sp, #12
  58              	.LCFI2:
  59              		.cfi_def_cfa_offset 4
  60              		@ sp needed
  61 0018 5DF804FB 		ldr	pc, [sp], #4
  62              	.L4:
  63              		.align	2
  64              	.L3:
  65 001c 00000000 		.word	huart1
  66              		.cfi_endproc
  67              	.LFE135:
  69              		.section	.text.fgetc,"ax",%progbits
  70              		.align	1
  71              		.global	fgetc
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	fgetc:
  77              	.LVL4:
  78              	.LFB136:
 251:Core/Src/main.c **** int fgetc(FILE *f)
 252:Core/Src/main.c **** {
  79              		.loc 1 252 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 8
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		.loc 1 252 1 is_stmt 0 view .LVU8
  84 0000 00B5     		push	{lr}
  85              	.LCFI3:
  86              		.cfi_def_cfa_offset 4
  87              		.cfi_offset 14, -4
  88 0002 83B0     		sub	sp, sp, #12
  89              	.LCFI4:
  90              		.cfi_def_cfa_offset 16
 253:Core/Src/main.c ****   uint8_t ch = 0;
  91              		.loc 1 253 3 is_stmt 1 view .LVU9
  92              		.loc 1 253 11 is_stmt 0 view .LVU10
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 7


  93 0004 0023     		movs	r3, #0
  94 0006 8DF80730 		strb	r3, [sp, #7]
 254:Core/Src/main.c ****   HAL_UART_Receive(&huart1, &ch, 1, 0xffff);
  95              		.loc 1 254 3 is_stmt 1 view .LVU11
  96 000a 4FF6FF73 		movw	r3, #65535
  97 000e 0122     		movs	r2, #1
  98 0010 0DF10701 		add	r1, sp, #7
  99 0014 0348     		ldr	r0, .L7
 100              	.LVL5:
 101              		.loc 1 254 3 is_stmt 0 view .LVU12
 102 0016 FFF7FEFF 		bl	HAL_UART_Receive
 103              	.LVL6:
 255:Core/Src/main.c ****   return ch;
 104              		.loc 1 255 3 is_stmt 1 view .LVU13
 256:Core/Src/main.c **** }
 105              		.loc 1 256 1 is_stmt 0 view .LVU14
 106 001a 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 107 001e 03B0     		add	sp, sp, #12
 108              	.LCFI5:
 109              		.cfi_def_cfa_offset 4
 110              		@ sp needed
 111 0020 5DF804FB 		ldr	pc, [sp], #4
 112              	.L8:
 113              		.align	2
 114              	.L7:
 115 0024 00000000 		.word	huart1
 116              		.cfi_endproc
 117              	.LFE136:
 119              		.global	__aeabi_f2d
 120              		.section	.rodata.HAL_I2C_SlaveRxCpltCallback.str1.4,"aMS",%progbits,1
 121              		.align	2
 122              	.LC0:
 123 0000 25662C20 		.ascii	"%f, %f, %f\012\000"
 123      25662C20 
 123      25660A00 
 124              		.section	.text.HAL_I2C_SlaveRxCpltCallback,"ax",%progbits
 125              		.align	1
 126              		.global	HAL_I2C_SlaveRxCpltCallback
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 131              	HAL_I2C_SlaveRxCpltCallback:
 132              	.LVL7:
 133              	.LFB137:
 257:Core/Src/main.c **** 
 258:Core/Src/main.c **** void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
 259:Core/Src/main.c **** {
 134              		.loc 1 259 1 is_stmt 1 view -0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 8
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		.loc 1 259 1 is_stmt 0 view .LVU16
 139 0000 30B5     		push	{r4, r5, lr}
 140              	.LCFI6:
 141              		.cfi_def_cfa_offset 12
 142              		.cfi_offset 4, -12
 143              		.cfi_offset 5, -8
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 8


 144              		.cfi_offset 14, -4
 145 0002 2DED028B 		vpush.64	{d8}
 146              	.LCFI7:
 147              		.cfi_def_cfa_offset 20
 148              		.cfi_offset 80, -20
 149              		.cfi_offset 81, -16
 150 0006 87B0     		sub	sp, sp, #28
 151              	.LCFI8:
 152              		.cfi_def_cfa_offset 48
 260:Core/Src/main.c ****   //printf("data1 = %d\n", ReceiveBuffer[1]);
 261:Core/Src/main.c ****   uint8_t IMU_data[6] = {0};
 153              		.loc 1 261 3 is_stmt 1 view .LVU17
 154              		.loc 1 261 11 is_stmt 0 view .LVU18
 155 0008 0023     		movs	r3, #0
 156 000a 0493     		str	r3, [sp, #16]
 157 000c ADF81430 		strh	r3, [sp, #20]	@ movhi
 262:Core/Src/main.c ****   for(int i=0; i<6; i++)
 158              		.loc 1 262 3 is_stmt 1 view .LVU19
 159              	.LBB4:
 160              		.loc 1 262 7 view .LVU20
 161              	.LVL8:
 162              		.loc 1 262 3 is_stmt 0 view .LVU21
 163 0010 07E0     		b	.L10
 164              	.LVL9:
 165              	.L11:
 263:Core/Src/main.c ****   {
 264:Core/Src/main.c ****     IMU_data[i] = ReceiveBuffer[i];
 166              		.loc 1 264 5 is_stmt 1 discriminator 3 view .LVU22
 167              		.loc 1 264 32 is_stmt 0 discriminator 3 view .LVU23
 168 0012 304A     		ldr	r2, .L13
 169 0014 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 170              		.loc 1 264 17 discriminator 3 view .LVU24
 171 0016 03F11802 		add	r2, r3, #24
 172 001a 6A44     		add	r2, sp, r2
 173 001c 02F8081C 		strb	r1, [r2, #-8]
 262:Core/Src/main.c ****   for(int i=0; i<6; i++)
 174              		.loc 1 262 21 is_stmt 1 discriminator 3 view .LVU25
 262:Core/Src/main.c ****   for(int i=0; i<6; i++)
 175              		.loc 1 262 22 is_stmt 0 discriminator 3 view .LVU26
 176 0020 0133     		adds	r3, r3, #1
 177              	.LVL10:
 178              	.L10:
 262:Core/Src/main.c ****   for(int i=0; i<6; i++)
 179              		.loc 1 262 16 is_stmt 1 discriminator 1 view .LVU27
 262:Core/Src/main.c ****   for(int i=0; i<6; i++)
 180              		.loc 1 262 3 is_stmt 0 discriminator 1 view .LVU28
 181 0022 052B     		cmp	r3, #5
 182 0024 F5DD     		ble	.L11
 183              	.LBE4:
 265:Core/Src/main.c ****   }
 266:Core/Src/main.c ****   IMU_Angle_Raw[0] = (int16_t)(IMU_data[0]<<8 | IMU_data[1]);
 184              		.loc 1 266 3 is_stmt 1 view .LVU29
 185              		.loc 1 266 40 is_stmt 0 view .LVU30
 186 0026 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 187              	.LVL11:
 188              		.loc 1 266 57 view .LVU31
 189 002a 9DF81110 		ldrb	r1, [sp, #17]	@ zero_extendqisi2
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 9


 190              		.loc 1 266 22 view .LVU32
 191 002e 41EA0321 		orr	r1, r1, r3, lsl #8
 192 0032 09B2     		sxth	r1, r1
 193              		.loc 1 266 20 view .LVU33
 194 0034 2848     		ldr	r0, .L13+4
 195              	.LVL12:
 196              		.loc 1 266 20 view .LVU34
 197 0036 0180     		strh	r1, [r0]	@ movhi
 267:Core/Src/main.c ****   IMU_Angle_Raw[1] = (int16_t)(IMU_data[2]<<8 | IMU_data[3]);
 198              		.loc 1 267 3 is_stmt 1 view .LVU35
 199              		.loc 1 267 40 is_stmt 0 view .LVU36
 200 0038 9DF81230 		ldrb	r3, [sp, #18]	@ zero_extendqisi2
 201              		.loc 1 267 57 view .LVU37
 202 003c 9DF81320 		ldrb	r2, [sp, #19]	@ zero_extendqisi2
 203              		.loc 1 267 22 view .LVU38
 204 0040 42EA0322 		orr	r2, r2, r3, lsl #8
 205 0044 12B2     		sxth	r2, r2
 206              		.loc 1 267 20 view .LVU39
 207 0046 4280     		strh	r2, [r0, #2]	@ movhi
 268:Core/Src/main.c ****   IMU_Angle_Raw[2] = (int16_t)(IMU_data[4]<<8 | IMU_data[5]);
 208              		.loc 1 268 3 is_stmt 1 view .LVU40
 209              		.loc 1 268 40 is_stmt 0 view .LVU41
 210 0048 9DF81440 		ldrb	r4, [sp, #20]	@ zero_extendqisi2
 211              		.loc 1 268 57 view .LVU42
 212 004c 9DF81530 		ldrb	r3, [sp, #21]	@ zero_extendqisi2
 213              		.loc 1 268 22 view .LVU43
 214 0050 43EA0423 		orr	r3, r3, r4, lsl #8
 215 0054 1BB2     		sxth	r3, r3
 216              		.loc 1 268 20 view .LVU44
 217 0056 8380     		strh	r3, [r0, #4]	@ movhi
 269:Core/Src/main.c ****   IMU_Angle[0] = (float)IMU_Angle_Raw[0]/100;
 218              		.loc 1 269 3 is_stmt 1 view .LVU45
 219              		.loc 1 269 18 is_stmt 0 view .LVU46
 220 0058 07EE901A 		vmov	s15, r1	@ int
 221 005c F8EEE77A 		vcvt.f32.s32	s15, s15
 222              		.loc 1 269 41 view .LVU47
 223 0060 DFED1E6A 		vldr.32	s13, .L13+8
 224 0064 87EEA67A 		vdiv.f32	s14, s15, s13
 225              		.loc 1 269 16 view .LVU48
 226 0068 1D49     		ldr	r1, .L13+12
 227 006a 81ED007A 		vstr.32	s14, [r1]
 270:Core/Src/main.c ****   IMU_Angle[1] = (float)IMU_Angle_Raw[1]/100;
 228              		.loc 1 270 3 is_stmt 1 view .LVU49
 229              		.loc 1 270 18 is_stmt 0 view .LVU50
 230 006e 07EE902A 		vmov	s15, r2	@ int
 231 0072 F8EEE77A 		vcvt.f32.s32	s15, s15
 232              		.loc 1 270 41 view .LVU51
 233 0076 87EEA68A 		vdiv.f32	s16, s15, s13
 234              		.loc 1 270 16 view .LVU52
 235 007a 81ED018A 		vstr.32	s16, [r1, #4]
 271:Core/Src/main.c ****   IMU_Angle[2] = (float)IMU_Angle_Raw[2]/10;
 236              		.loc 1 271 3 is_stmt 1 view .LVU53
 237              		.loc 1 271 18 is_stmt 0 view .LVU54
 238 007e 07EE903A 		vmov	s15, r3	@ int
 239 0082 F8EEE77A 		vcvt.f32.s32	s15, s15
 240              		.loc 1 271 41 view .LVU55
 241 0086 F2EE046A 		vmov.f32	s13, #1.0e+1
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 10


 242 008a C7EEA68A 		vdiv.f32	s17, s15, s13
 243              		.loc 1 271 16 view .LVU56
 244 008e C1ED028A 		vstr.32	s17, [r1, #8]
 272:Core/Src/main.c **** //  printf("%f, %d, %d, \n", 
 273:Core/Src/main.c **** //        (int16_t)(IMU_data[0]<<8 | IMU_data[1])/100, 
 274:Core/Src/main.c **** //        (int16_t)(IMU_data[2]<<8 | IMU_data[3]), 
 275:Core/Src/main.c **** //        (int16_t)(IMU_data[4]<<8 | IMU_data[5])*10);
 276:Core/Src/main.c ****   printf("%f, %f, %f\n", IMU_Angle[0], IMU_Angle[1], IMU_Angle[2]);
 245              		.loc 1 276 3 is_stmt 1 view .LVU57
 246 0092 17EE100A 		vmov	r0, s14
 247 0096 FFF7FEFF 		bl	__aeabi_f2d
 248              	.LVL13:
 249 009a 0446     		mov	r4, r0
 250 009c 0D46     		mov	r5, r1
 251 009e 18EE900A 		vmov	r0, s17
 252 00a2 FFF7FEFF 		bl	__aeabi_f2d
 253              	.LVL14:
 254 00a6 CDE90201 		strd	r0, [sp, #8]
 255 00aa 18EE100A 		vmov	r0, s16
 256 00ae FFF7FEFF 		bl	__aeabi_f2d
 257              	.LVL15:
 258 00b2 CDE90001 		strd	r0, [sp]
 259 00b6 2246     		mov	r2, r4
 260 00b8 2B46     		mov	r3, r5
 261 00ba 0A48     		ldr	r0, .L13+16
 262 00bc FFF7FEFF 		bl	printf
 263              	.LVL16:
 277:Core/Src/main.c ****   HAL_I2C_Slave_Receive_IT(&hi2c2,ReceiveBuffer,sizeof(ReceiveBuffer));
 264              		.loc 1 277 3 view .LVU58
 265 00c0 0622     		movs	r2, #6
 266 00c2 0449     		ldr	r1, .L13
 267 00c4 0848     		ldr	r0, .L13+20
 268 00c6 FFF7FEFF 		bl	HAL_I2C_Slave_Receive_IT
 269              	.LVL17:
 278:Core/Src/main.c **** }
 270              		.loc 1 278 1 is_stmt 0 view .LVU59
 271 00ca 07B0     		add	sp, sp, #28
 272              	.LCFI9:
 273              		.cfi_def_cfa_offset 20
 274              		@ sp needed
 275 00cc BDEC028B 		vldm	sp!, {d8}
 276              	.LCFI10:
 277              		.cfi_restore 80
 278              		.cfi_restore 81
 279              		.cfi_def_cfa_offset 12
 280 00d0 30BD     		pop	{r4, r5, pc}
 281              	.L14:
 282 00d2 00BF     		.align	2
 283              	.L13:
 284 00d4 00000000 		.word	.LANCHOR0
 285 00d8 00000000 		.word	.LANCHOR1
 286 00dc 0000C842 		.word	1120403456
 287 00e0 00000000 		.word	.LANCHOR2
 288 00e4 00000000 		.word	.LC0
 289 00e8 00000000 		.word	hi2c2
 290              		.cfi_endproc
 291              	.LFE137:
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 11


 293              		.global	__aeabi_dadd
 294              		.global	__aeabi_dmul
 295              		.global	__aeabi_ddiv
 296              		.global	__aeabi_d2iz
 297              		.section	.rodata.Abs_angle_control_loop.str1.4,"aMS",%progbits,1
 298              		.align	2
 299              	.LC1:
 300 0000 25642C20 		.ascii	"%d, %d\012\000"
 300      25640A00 
 301              		.section	.text.Abs_angle_control_loop,"ax",%progbits
 302              		.align	1
 303              		.global	Abs_angle_control_loop
 304              		.syntax unified
 305              		.thumb
 306              		.thumb_func
 308              	Abs_angle_control_loop:
 309              	.LFB138:
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** //陀螺仪位置控制
 281:Core/Src/main.c **** void Abs_angle_control_loop()
 282:Core/Src/main.c **** {
 310              		.loc 1 282 1 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 315              	.LCFI11:
 316              		.cfi_def_cfa_offset 24
 317              		.cfi_offset 4, -24
 318              		.cfi_offset 5, -20
 319              		.cfi_offset 6, -16
 320              		.cfi_offset 7, -12
 321              		.cfi_offset 8, -8
 322              		.cfi_offset 14, -4
 323 0004 82B0     		sub	sp, sp, #8
 324              	.LCFI12:
 325              		.cfi_def_cfa_offset 32
 283:Core/Src/main.c ****   /*自稳控制*/
 284:Core/Src/main.c ****   //IMU归一化
 285:Core/Src/main.c ****   ABS_IMU_angle[0] = (int)((IMU_Angle[2]*8192)/360); //yaw
 326              		.loc 1 285 3 view .LVU61
 327              		.loc 1 285 38 is_stmt 0 view .LVU62
 328 0006 3F4B     		ldr	r3, .L17
 329 0008 93ED027A 		vldr.32	s14, [r3, #8]
 330              		.loc 1 285 41 view .LVU63
 331 000c DFED3E7A 		vldr.32	s15, .L17+4
 332 0010 27EE277A 		vmul.f32	s14, s14, s15
 333              		.loc 1 285 47 view .LVU64
 334 0014 DFED3D6A 		vldr.32	s13, .L17+8
 335 0018 C7EE267A 		vdiv.f32	s15, s14, s13
 336              		.loc 1 285 22 view .LVU65
 337 001c FDEEE77A 		vcvt.s32.f32	s15, s15
 338              		.loc 1 285 20 view .LVU66
 339 0020 17EE902A 		vmov	r2, s15	@ int
 340 0024 14B2     		sxth	r4, r2
 341 0026 3A4E     		ldr	r6, .L17+12
 342 0028 3480     		strh	r4, [r6]	@ movhi
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 12


 286:Core/Src/main.c ****   ABS_IMU_angle[1] = (int)(((IMU_Angle[0]+180.0)*8192)/360); //pitch
 343              		.loc 1 286 3 is_stmt 1 view .LVU67
 344              		.loc 1 286 39 is_stmt 0 view .LVU68
 345 002a 1868     		ldr	r0, [r3]	@ float
 346 002c FFF7FEFF 		bl	__aeabi_f2d
 347              	.LVL18:
 348              		.loc 1 286 42 view .LVU69
 349 0030 0022     		movs	r2, #0
 350 0032 384B     		ldr	r3, .L17+16
 351 0034 FFF7FEFF 		bl	__aeabi_dadd
 352              	.LVL19:
 353              		.loc 1 286 49 view .LVU70
 354 0038 0022     		movs	r2, #0
 355 003a 374B     		ldr	r3, .L17+20
 356 003c FFF7FEFF 		bl	__aeabi_dmul
 357              	.LVL20:
 358              		.loc 1 286 55 view .LVU71
 359 0040 0022     		movs	r2, #0
 360 0042 364B     		ldr	r3, .L17+24
 361 0044 FFF7FEFF 		bl	__aeabi_ddiv
 362              	.LVL21:
 363              		.loc 1 286 22 view .LVU72
 364 0048 FFF7FEFF 		bl	__aeabi_d2iz
 365              	.LVL22:
 366              		.loc 1 286 20 view .LVU73
 367 004c 7080     		strh	r0, [r6, #2]	@ movhi
 287:Core/Src/main.c ****   //YAW计算
 288:Core/Src/main.c ****   int motor_ID = 0;
 368              		.loc 1 288 3 is_stmt 1 view .LVU74
 369              	.LVL23:
 289:Core/Src/main.c ****   abs_pid[motor_ID].target = ABS_Gimbal_angle[0];
 370              		.loc 1 289 3 view .LVU75
 371              		.loc 1 289 46 is_stmt 0 view .LVU76
 372 004e DFF8E480 		ldr	r8, .L17+48
 373 0052 D8F80030 		ldr	r3, [r8]	@ float
 374              		.loc 1 289 28 view .LVU77
 375 0056 324D     		ldr	r5, .L17+28
 376 0058 6B60     		str	r3, [r5, #4]	@ float
 290:Core/Src/main.c ****   abs_pid[motor_ID].f_cal_pid(&abs_pid[motor_ID], ABS_IMU_angle[motor_ID], 8192);
 377              		.loc 1 290 3 is_stmt 1 view .LVU78
 378              		.loc 1 290 20 is_stmt 0 view .LVU79
 379 005a 2B6E     		ldr	r3, [r5, #96]
 380              		.loc 1 290 3 view .LVU80
 381 005c 4FF40051 		mov	r1, #8192
 382 0060 07EE904A 		vmov	s15, r4	@ int
 383 0064 B8EEE70A 		vcvt.f32.s32	s0, s15
 384 0068 2846     		mov	r0, r5
 385 006a 9847     		blx	r3
 386              	.LVL24:
 291:Core/Src/main.c ****   motor_pid[motor_ID].target = abs_pid[motor_ID].output; 																							
 387              		.loc 1 291 3 is_stmt 1 view .LVU81
 388              		.loc 1 291 49 is_stmt 0 view .LVU82
 389 006c 2B6B     		ldr	r3, [r5, #48]	@ float
 390              		.loc 1 291 30 view .LVU83
 391 006e 2D4C     		ldr	r4, .L17+32
 392 0070 6360     		str	r3, [r4, #4]	@ float
 292:Core/Src/main.c ****   motor_pid[motor_ID].f_cal_pid(&motor_pid[motor_ID],moto_chassis[motor_ID].speed_rpm, 0);
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 13


 393              		.loc 1 292 3 is_stmt 1 view .LVU84
 394              		.loc 1 292 22 is_stmt 0 view .LVU85
 395 0072 236E     		ldr	r3, [r4, #96]
 396              		.loc 1 292 76 view .LVU86
 397 0074 2C4F     		ldr	r7, .L17+36
 398 0076 B7F90020 		ldrsh	r2, [r7]
 399 007a 00EE102A 		vmov	s0, r2	@ int
 400              		.loc 1 292 3 view .LVU87
 401 007e 0021     		movs	r1, #0
 402 0080 B8EEC00A 		vcvt.f32.s32	s0, s0
 403 0084 2046     		mov	r0, r4
 404 0086 9847     		blx	r3
 405              	.LVL25:
 293:Core/Src/main.c **** 
 294:Core/Src/main.c ****   //PITCH计算
 295:Core/Src/main.c ****   motor_ID = 1;
 406              		.loc 1 295 3 is_stmt 1 view .LVU88
 296:Core/Src/main.c ****   abs_pid[motor_ID].target = ABS_Gimbal_angle[1];
 407              		.loc 1 296 3 view .LVU89
 408              		.loc 1 296 46 is_stmt 0 view .LVU90
 409 0088 D8F80430 		ldr	r3, [r8, #4]	@ float
 410              		.loc 1 296 28 view .LVU91
 411 008c AB66     		str	r3, [r5, #104]	@ float
 297:Core/Src/main.c ****   abs_pid[motor_ID].f_cal_pid(&abs_pid[motor_ID], ABS_IMU_angle[motor_ID], 8192);
 412              		.loc 1 297 3 is_stmt 1 view .LVU92
 413              		.loc 1 297 20 is_stmt 0 view .LVU93
 414 008e D5F8C430 		ldr	r3, [r5, #196]
 415              		.loc 1 297 64 view .LVU94
 416 0092 B6F90220 		ldrsh	r2, [r6, #2]
 417 0096 00EE102A 		vmov	s0, r2	@ int
 418              		.loc 1 297 3 view .LVU95
 419 009a 4FF40051 		mov	r1, #8192
 420 009e B8EEC00A 		vcvt.f32.s32	s0, s0
 421 00a2 05F16400 		add	r0, r5, #100
 422 00a6 9847     		blx	r3
 423              	.LVL26:
 298:Core/Src/main.c ****   motor_pid[motor_ID].target = abs_pid[motor_ID].output; 																							
 424              		.loc 1 298 3 is_stmt 1 view .LVU96
 425              		.loc 1 298 49 is_stmt 0 view .LVU97
 426 00a8 D5F89430 		ldr	r3, [r5, #148]	@ float
 427              		.loc 1 298 30 view .LVU98
 428 00ac A366     		str	r3, [r4, #104]	@ float
 299:Core/Src/main.c ****   motor_pid[motor_ID].f_cal_pid(&motor_pid[motor_ID],moto_chassis[motor_ID].speed_rpm, 0);
 429              		.loc 1 299 3 is_stmt 1 view .LVU99
 430              		.loc 1 299 22 is_stmt 0 view .LVU100
 431 00ae D4F8C430 		ldr	r3, [r4, #196]
 432              		.loc 1 299 76 view .LVU101
 433 00b2 B7F93020 		ldrsh	r2, [r7, #48]
 434 00b6 00EE102A 		vmov	s0, r2	@ int
 435              		.loc 1 299 3 view .LVU102
 436 00ba 0021     		movs	r1, #0
 437 00bc B8EEC00A 		vcvt.f32.s32	s0, s0
 438 00c0 04F16400 		add	r0, r4, #100
 439 00c4 9847     		blx	r3
 440              	.LVL27:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c **** 
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 14


 302:Core/Src/main.c ****   set_moto_current(&hcan1, motor_pid[0].output, motor_pid[1].output, 0, 0);
 441              		.loc 1 302 3 is_stmt 1 view .LVU103
 442              		.loc 1 302 40 is_stmt 0 view .LVU104
 443 00c6 D4ED0C7A 		vldr.32	s15, [r4, #48]
 444              		.loc 1 302 61 view .LVU105
 445 00ca 94ED257A 		vldr.32	s14, [r4, #148]
 446              		.loc 1 302 3 view .LVU106
 447 00ce BDEEC77A 		vcvt.s32.f32	s14, s14
 448 00d2 FDEEE77A 		vcvt.s32.f32	s15, s15
 449 00d6 0023     		movs	r3, #0
 450 00d8 0093     		str	r3, [sp]
 451 00da 17EE102A 		vmov	r2, s14	@ int
 452 00de 12B2     		sxth	r2, r2
 453 00e0 17EE901A 		vmov	r1, s15	@ int
 454 00e4 09B2     		sxth	r1, r1
 455 00e6 1148     		ldr	r0, .L17+40
 456 00e8 FFF7FEFF 		bl	set_moto_current
 457              	.LVL28:
 303:Core/Src/main.c ****   printf("%d, %d\n", moto_chassis[motor_ID].angle, ABS_IMU_angle[motor_ID]);
 458              		.loc 1 303 3 is_stmt 1 view .LVU107
 459 00ec B6F90220 		ldrsh	r2, [r6, #2]
 460 00f0 B98F     		ldrh	r1, [r7, #60]
 461 00f2 0F48     		ldr	r0, .L17+44
 462 00f4 FFF7FEFF 		bl	printf
 463              	.LVL29:
 304:Core/Src/main.c ****   HAL_Delay(1);
 464              		.loc 1 304 3 view .LVU108
 465 00f8 0120     		movs	r0, #1
 466 00fa FFF7FEFF 		bl	HAL_Delay
 467              	.LVL30:
 305:Core/Src/main.c **** }
 468              		.loc 1 305 1 is_stmt 0 view .LVU109
 469 00fe 02B0     		add	sp, sp, #8
 470              	.LCFI13:
 471              		.cfi_def_cfa_offset 24
 472              		@ sp needed
 473 0100 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 474              	.L18:
 475              		.align	2
 476              	.L17:
 477 0104 00000000 		.word	.LANCHOR2
 478 0108 00000046 		.word	1174405120
 479 010c 0000B443 		.word	1135869952
 480 0110 00000000 		.word	.LANCHOR3
 481 0114 00806640 		.word	1080459264
 482 0118 0000C040 		.word	1086324736
 483 011c 00807640 		.word	1081507840
 484 0120 00000000 		.word	.LANCHOR5
 485 0124 00000000 		.word	.LANCHOR6
 486 0128 00000000 		.word	moto_chassis
 487 012c 00000000 		.word	hcan1
 488 0130 00000000 		.word	.LC1
 489 0134 00000000 		.word	.LANCHOR4
 490              		.cfi_endproc
 491              	.LFE138:
 493              		.section	.rodata.Rel_angle_control_loop.str1.4,"aMS",%progbits,1
 494              		.align	2
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 15


 495              	.LC2:
 496 0000 25660A00 		.ascii	"%f\012\000"
 497              		.section	.text.Rel_angle_control_loop,"ax",%progbits
 498              		.align	1
 499              		.global	Rel_angle_control_loop
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 504              	Rel_angle_control_loop:
 505              	.LFB139:
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** //编码器位置控制
 308:Core/Src/main.c **** void Rel_angle_control_loop()
 309:Core/Src/main.c **** {
 506              		.loc 1 309 1 is_stmt 1 view -0
 507              		.cfi_startproc
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 511              	.LCFI14:
 512              		.cfi_def_cfa_offset 20
 513              		.cfi_offset 4, -20
 514              		.cfi_offset 5, -16
 515              		.cfi_offset 6, -12
 516              		.cfi_offset 7, -8
 517              		.cfi_offset 14, -4
 518 0002 83B0     		sub	sp, sp, #12
 519              	.LCFI15:
 520              		.cfi_def_cfa_offset 32
 310:Core/Src/main.c ****     
 311:Core/Src/main.c ****     i++;
 521              		.loc 1 311 5 view .LVU111
 522              		.loc 1 311 6 is_stmt 0 view .LVU112
 523 0004 4C4A     		ldr	r2, .L23
 524 0006 1368     		ldr	r3, [r2]
 525 0008 0133     		adds	r3, r3, #1
 526 000a 1360     		str	r3, [r2]
 312:Core/Src/main.c ****   /*自稳计算*/
 313:Core/Src/main.c ****   //IMU归一化
 314:Core/Src/main.c ****   ABS_IMU_angle[0] = (int)(IMU_Angle[2]*(8192/360)); //yaw
 527              		.loc 1 314 3 is_stmt 1 view .LVU113
 528              		.loc 1 314 37 is_stmt 0 view .LVU114
 529 000c 4B4B     		ldr	r3, .L23+4
 530 000e D3ED027A 		vldr.32	s15, [r3, #8]
 531              		.loc 1 314 40 view .LVU115
 532 0012 B3EE067A 		vmov.f32	s14, #2.2e+1
 533 0016 67EE877A 		vmul.f32	s15, s15, s14
 534              		.loc 1 314 22 view .LVU116
 535 001a FDEEE77A 		vcvt.s32.f32	s15, s15
 536              		.loc 1 314 20 view .LVU117
 537 001e 484C     		ldr	r4, .L23+8
 538 0020 17EE902A 		vmov	r2, s15	@ int
 539 0024 2280     		strh	r2, [r4]	@ movhi
 315:Core/Src/main.c ****   ABS_IMU_angle[1] = (int)((IMU_Angle[0]+180.0)*(8192/360)); //pitch
 540              		.loc 1 315 3 is_stmt 1 view .LVU118
 541              		.loc 1 315 38 is_stmt 0 view .LVU119
 542 0026 1868     		ldr	r0, [r3]	@ float
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 16


 543 0028 FFF7FEFF 		bl	__aeabi_f2d
 544              	.LVL31:
 545              		.loc 1 315 41 view .LVU120
 546 002c 0022     		movs	r2, #0
 547 002e 454B     		ldr	r3, .L23+12
 548 0030 FFF7FEFF 		bl	__aeabi_dadd
 549              	.LVL32:
 550              		.loc 1 315 48 view .LVU121
 551 0034 0022     		movs	r2, #0
 552 0036 444B     		ldr	r3, .L23+16
 553 0038 FFF7FEFF 		bl	__aeabi_dmul
 554              	.LVL33:
 555              		.loc 1 315 22 view .LVU122
 556 003c FFF7FEFF 		bl	__aeabi_d2iz
 557              	.LVL34:
 558              		.loc 1 315 20 view .LVU123
 559 0040 6080     		strh	r0, [r4, #2]	@ movhi
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****   if(Gimbal_angle[0] > 8191) Gimbal_angle[0] = 0;
 560              		.loc 1 317 3 is_stmt 1 view .LVU124
 561              		.loc 1 317 18 is_stmt 0 view .LVU125
 562 0042 424B     		ldr	r3, .L23+20
 563 0044 B3F90030 		ldrsh	r3, [r3]
 564              		.loc 1 317 5 view .LVU126
 565 0048 B3F5005F 		cmp	r3, #8192
 566 004c 6DDB     		blt	.L20
 567              		.loc 1 317 30 is_stmt 1 discriminator 1 view .LVU127
 568              		.loc 1 317 46 is_stmt 0 discriminator 1 view .LVU128
 569 004e 3F4B     		ldr	r3, .L23+20
 570 0050 0022     		movs	r2, #0
 571 0052 1A80     		strh	r2, [r3]	@ movhi
 572              	.L21:
 318:Core/Src/main.c ****   else if(Gimbal_angle[0] < 0) Gimbal_angle[0] = 8191;
 319:Core/Src/main.c ****     //用PID计算电流
 320:Core/Src/main.c ****     //这里用for会有奇怪的问题，暂时展开
 321:Core/Src/main.c ****     int motor_ID = 0;
 573              		.loc 1 321 5 is_stmt 1 view .LVU129
 574              	.LVL35:
 322:Core/Src/main.c ****     angle_pid[motor_ID].target = Gimbal_angle[0];
 575              		.loc 1 322 5 view .LVU130
 576              		.loc 1 322 46 is_stmt 0 view .LVU131
 577 0054 3D4F     		ldr	r7, .L23+20
 578 0056 B7F90030 		ldrsh	r3, [r7]
 579 005a 07EE903A 		vmov	s15, r3	@ int
 580              		.loc 1 322 32 view .LVU132
 581 005e 3C4D     		ldr	r5, .L23+24
 582 0060 F8EEE77A 		vcvt.f32.s32	s15, s15
 583 0064 C5ED017A 		vstr.32	s15, [r5, #4]
 323:Core/Src/main.c ****     angle_pid[motor_ID].f_cal_pid(&angle_pid[motor_ID], moto_chassis[motor_ID].angle, 8192);
 584              		.loc 1 323 5 is_stmt 1 view .LVU133
 585              		.loc 1 323 24 is_stmt 0 view .LVU134
 586 0068 2B6E     		ldr	r3, [r5, #96]
 587              		.loc 1 323 79 view .LVU135
 588 006a 3A4E     		ldr	r6, .L23+28
 589 006c B289     		ldrh	r2, [r6, #12]
 590 006e 00EE102A 		vmov	s0, r2	@ int
 591              		.loc 1 323 5 view .LVU136
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 17


 592 0072 4FF40051 		mov	r1, #8192
 593 0076 B8EE400A 		vcvt.f32.u32	s0, s0
 594 007a 2846     		mov	r0, r5
 595 007c 9847     		blx	r3
 596              	.LVL36:
 324:Core/Src/main.c ****     motor_pid[motor_ID].target = angle_pid[motor_ID].output;
 597              		.loc 1 324 5 is_stmt 1 view .LVU137
 598              		.loc 1 324 53 is_stmt 0 view .LVU138
 599 007e 2B6B     		ldr	r3, [r5, #48]	@ float
 600              		.loc 1 324 32 view .LVU139
 601 0080 354C     		ldr	r4, .L23+32
 602 0082 6360     		str	r3, [r4, #4]	@ float
 325:Core/Src/main.c ****     motor_pid[motor_ID].f_cal_pid(&motor_pid[motor_ID],moto_chassis[motor_ID].speed_rpm, 0);
 603              		.loc 1 325 5 is_stmt 1 view .LVU140
 604              		.loc 1 325 24 is_stmt 0 view .LVU141
 605 0084 236E     		ldr	r3, [r4, #96]
 606              		.loc 1 325 78 view .LVU142
 607 0086 B6F90020 		ldrsh	r2, [r6]
 608 008a 00EE102A 		vmov	s0, r2	@ int
 609              		.loc 1 325 5 view .LVU143
 610 008e 0021     		movs	r1, #0
 611 0090 B8EEC00A 		vcvt.f32.s32	s0, s0
 612 0094 2046     		mov	r0, r4
 613 0096 9847     		blx	r3
 614              	.LVL37:
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****     motor_ID = 1;
 615              		.loc 1 327 5 is_stmt 1 view .LVU144
 328:Core/Src/main.c ****     angle_pid[motor_ID].target = Gimbal_angle[1];
 616              		.loc 1 328 5 view .LVU145
 617              		.loc 1 328 46 is_stmt 0 view .LVU146
 618 0098 B7F90230 		ldrsh	r3, [r7, #2]
 619 009c 07EE903A 		vmov	s15, r3	@ int
 620              		.loc 1 328 32 view .LVU147
 621 00a0 F8EEE77A 		vcvt.f32.s32	s15, s15
 622 00a4 C5ED1A7A 		vstr.32	s15, [r5, #104]
 329:Core/Src/main.c ****     angle_pid[motor_ID].f_cal_pid(&angle_pid[motor_ID], moto_chassis[motor_ID].angle, 8192);
 623              		.loc 1 329 5 is_stmt 1 view .LVU148
 624              		.loc 1 329 24 is_stmt 0 view .LVU149
 625 00a8 D5F8C430 		ldr	r3, [r5, #196]
 626              		.loc 1 329 79 view .LVU150
 627 00ac B28F     		ldrh	r2, [r6, #60]
 628 00ae 00EE102A 		vmov	s0, r2	@ int
 629              		.loc 1 329 5 view .LVU151
 630 00b2 4FF40051 		mov	r1, #8192
 631 00b6 B8EE400A 		vcvt.f32.u32	s0, s0
 632 00ba 05F16400 		add	r0, r5, #100
 633 00be 9847     		blx	r3
 634              	.LVL38:
 330:Core/Src/main.c ****     motor_pid[motor_ID].target = angle_pid[motor_ID].output; 																							
 635              		.loc 1 330 5 is_stmt 1 view .LVU152
 636              		.loc 1 330 53 is_stmt 0 view .LVU153
 637 00c0 D5F89430 		ldr	r3, [r5, #148]	@ float
 638              		.loc 1 330 32 view .LVU154
 639 00c4 A366     		str	r3, [r4, #104]	@ float
 331:Core/Src/main.c ****     motor_pid[motor_ID].f_cal_pid(&motor_pid[motor_ID],moto_chassis[motor_ID].speed_rpm, 0);
 640              		.loc 1 331 5 is_stmt 1 view .LVU155
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 18


 641              		.loc 1 331 24 is_stmt 0 view .LVU156
 642 00c6 D4F8C430 		ldr	r3, [r4, #196]
 643              		.loc 1 331 78 view .LVU157
 644 00ca B6F93020 		ldrsh	r2, [r6, #48]
 645 00ce 00EE102A 		vmov	s0, r2	@ int
 646              		.loc 1 331 5 view .LVU158
 647 00d2 0021     		movs	r1, #0
 648 00d4 B8EEC00A 		vcvt.f32.s32	s0, s0
 649 00d8 04F16400 		add	r0, r4, #100
 650 00dc 9847     		blx	r3
 651              	.LVL39:
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****     set_moto_current(&hcan1, motor_pid[0].output, motor_pid[1].output, 0, 0);
 652              		.loc 1 333 5 is_stmt 1 view .LVU159
 653              		.loc 1 333 42 is_stmt 0 view .LVU160
 654 00de D4ED0C7A 		vldr.32	s15, [r4, #48]
 655              		.loc 1 333 63 view .LVU161
 656 00e2 94ED257A 		vldr.32	s14, [r4, #148]
 657              		.loc 1 333 5 view .LVU162
 658 00e6 BDEEC77A 		vcvt.s32.f32	s14, s14
 659 00ea FDEEE77A 		vcvt.s32.f32	s15, s15
 660 00ee 0023     		movs	r3, #0
 661 00f0 0093     		str	r3, [sp]
 662 00f2 17EE102A 		vmov	r2, s14	@ int
 663 00f6 12B2     		sxth	r2, r2
 664 00f8 17EE901A 		vmov	r1, s15	@ int
 665 00fc 09B2     		sxth	r1, r1
 666 00fe 1748     		ldr	r0, .L23+36
 667 0100 FFF7FEFF 		bl	set_moto_current
 668              	.LVL40:
 334:Core/Src/main.c ****     printf("%d, %d\n", moto_chassis[0].angle, moto_chassis[1].angle);
 669              		.loc 1 334 5 is_stmt 1 view .LVU163
 670 0104 B28F     		ldrh	r2, [r6, #60]
 671 0106 B189     		ldrh	r1, [r6, #12]
 672 0108 1548     		ldr	r0, .L23+40
 673 010a FFF7FEFF 		bl	printf
 674              	.LVL41:
 335:Core/Src/main.c ****     printf("%f\n", IMU_Angle[0]);
 675              		.loc 1 335 5 view .LVU164
 676 010e 0B4B     		ldr	r3, .L23+4
 677 0110 1868     		ldr	r0, [r3]	@ float
 678 0112 FFF7FEFF 		bl	__aeabi_f2d
 679              	.LVL42:
 680 0116 0246     		mov	r2, r0
 681 0118 0B46     		mov	r3, r1
 682 011a 1248     		ldr	r0, .L23+44
 683 011c FFF7FEFF 		bl	printf
 684              	.LVL43:
 336:Core/Src/main.c ****     HAL_Delay(1); //1000hz
 685              		.loc 1 336 5 view .LVU165
 686 0120 0120     		movs	r0, #1
 687 0122 FFF7FEFF 		bl	HAL_Delay
 688              	.LVL44:
 337:Core/Src/main.c **** }
 689              		.loc 1 337 1 is_stmt 0 view .LVU166
 690 0126 03B0     		add	sp, sp, #12
 691              	.LCFI16:
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 19


 692              		.cfi_remember_state
 693              		.cfi_def_cfa_offset 20
 694              		@ sp needed
 695 0128 F0BD     		pop	{r4, r5, r6, r7, pc}
 696              	.LVL45:
 697              	.L20:
 698              	.LCFI17:
 699              		.cfi_restore_state
 318:Core/Src/main.c ****     //用PID计算电流
 700              		.loc 1 318 8 is_stmt 1 view .LVU167
 318:Core/Src/main.c ****     //用PID计算电流
 701              		.loc 1 318 10 is_stmt 0 view .LVU168
 702 012a 002B     		cmp	r3, #0
 703 012c 92DA     		bge	.L21
 318:Core/Src/main.c ****     //用PID计算电流
 704              		.loc 1 318 32 is_stmt 1 discriminator 1 view .LVU169
 318:Core/Src/main.c ****     //用PID计算电流
 705              		.loc 1 318 48 is_stmt 0 discriminator 1 view .LVU170
 706 012e 074B     		ldr	r3, .L23+20
 707 0130 41F6FF72 		movw	r2, #8191
 708 0134 1A80     		strh	r2, [r3]	@ movhi
 709 0136 8DE7     		b	.L21
 710              	.L24:
 711              		.align	2
 712              	.L23:
 713 0138 00000000 		.word	.LANCHOR7
 714 013c 00000000 		.word	.LANCHOR2
 715 0140 00000000 		.word	.LANCHOR3
 716 0144 00806640 		.word	1080459264
 717 0148 00003640 		.word	1077280768
 718 014c 00000000 		.word	.LANCHOR8
 719 0150 00000000 		.word	.LANCHOR9
 720 0154 00000000 		.word	moto_chassis
 721 0158 00000000 		.word	.LANCHOR6
 722 015c 00000000 		.word	hcan1
 723 0160 00000000 		.word	.LC1
 724 0164 00000000 		.word	.LC2
 725              		.cfi_endproc
 726              	.LFE139:
 728              		.section	.text.Abs_angle_PID_test_loop,"ax",%progbits
 729              		.align	1
 730              		.global	Abs_angle_PID_test_loop
 731              		.syntax unified
 732              		.thumb
 733              		.thumb_func
 735              	Abs_angle_PID_test_loop:
 736              	.LVL46:
 737              	.LFB140:
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** //自稳PID效果测试
 340:Core/Src/main.c **** void Abs_angle_PID_test_loop(int motor_ID)
 341:Core/Src/main.c **** {
 738              		.loc 1 341 1 is_stmt 1 view -0
 739              		.cfi_startproc
 740              		@ args = 0, pretend = 0, frame = 0
 741              		@ frame_needed = 0, uses_anonymous_args = 0
 742              		.loc 1 341 1 is_stmt 0 view .LVU172
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 20


 743 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 744              	.LCFI18:
 745              		.cfi_def_cfa_offset 20
 746              		.cfi_offset 4, -20
 747              		.cfi_offset 5, -16
 748              		.cfi_offset 6, -12
 749              		.cfi_offset 7, -8
 750              		.cfi_offset 14, -4
 751 0002 83B0     		sub	sp, sp, #12
 752              	.LCFI19:
 753              		.cfi_def_cfa_offset 32
 754 0004 0446     		mov	r4, r0
 342:Core/Src/main.c ****   //自稳效果测试
 343:Core/Src/main.c ****   //IMU归一化
 344:Core/Src/main.c ****   ABS_IMU_angle[0] = (int)((IMU_Angle[2]*8192)/360); //yaw
 755              		.loc 1 344 3 is_stmt 1 view .LVU173
 756              		.loc 1 344 38 is_stmt 0 view .LVU174
 757 0006 3E4B     		ldr	r3, .L31
 758 0008 93ED027A 		vldr.32	s14, [r3, #8]
 759              		.loc 1 344 41 view .LVU175
 760 000c DFED3D7A 		vldr.32	s15, .L31+4
 761 0010 27EE277A 		vmul.f32	s14, s14, s15
 762              		.loc 1 344 47 view .LVU176
 763 0014 DFED3C6A 		vldr.32	s13, .L31+8
 764 0018 C7EE267A 		vdiv.f32	s15, s14, s13
 765              		.loc 1 344 22 view .LVU177
 766 001c FDEEE77A 		vcvt.s32.f32	s15, s15
 767              		.loc 1 344 20 view .LVU178
 768 0020 3A4F     		ldr	r7, .L31+12
 769 0022 17EE902A 		vmov	r2, s15	@ int
 770 0026 3A80     		strh	r2, [r7]	@ movhi
 345:Core/Src/main.c ****   ABS_IMU_angle[1] = (int)(((IMU_Angle[0]+180.0)*8192)/360); //pitch
 771              		.loc 1 345 3 is_stmt 1 view .LVU179
 772              		.loc 1 345 39 is_stmt 0 view .LVU180
 773 0028 1868     		ldr	r0, [r3]	@ float
 774              	.LVL47:
 775              		.loc 1 345 39 view .LVU181
 776 002a FFF7FEFF 		bl	__aeabi_f2d
 777              	.LVL48:
 778              		.loc 1 345 42 view .LVU182
 779 002e 0022     		movs	r2, #0
 780 0030 374B     		ldr	r3, .L31+16
 781 0032 FFF7FEFF 		bl	__aeabi_dadd
 782              	.LVL49:
 783              		.loc 1 345 49 view .LVU183
 784 0036 0022     		movs	r2, #0
 785 0038 364B     		ldr	r3, .L31+20
 786 003a FFF7FEFF 		bl	__aeabi_dmul
 787              	.LVL50:
 788              		.loc 1 345 55 view .LVU184
 789 003e 0022     		movs	r2, #0
 790 0040 354B     		ldr	r3, .L31+24
 791 0042 FFF7FEFF 		bl	__aeabi_ddiv
 792              	.LVL51:
 793              		.loc 1 345 22 view .LVU185
 794 0046 FFF7FEFF 		bl	__aeabi_d2iz
 795              	.LVL52:
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 21


 796              		.loc 1 345 20 view .LVU186
 797 004a 7880     		strh	r0, [r7, #2]	@ movhi
 346:Core/Src/main.c ****   abs_pid[motor_ID].target = 0;
 798              		.loc 1 346 3 is_stmt 1 view .LVU187
 799              		.loc 1 346 28 is_stmt 0 view .LVU188
 800 004c 6420     		movs	r0, #100
 801 004e 00FB04F6 		mul	r6, r0, r4
 802 0052 324D     		ldr	r5, .L31+28
 803 0054 3544     		add	r5, r5, r6
 804 0056 0023     		movs	r3, #0
 805 0058 6B60     		str	r3, [r5, #4]	@ float
 347:Core/Src/main.c ****   abs_pid[motor_ID].f_cal_pid(&abs_pid[motor_ID], ABS_IMU_angle[motor_ID], 8192);
 806              		.loc 1 347 3 is_stmt 1 view .LVU189
 807              		.loc 1 347 20 is_stmt 0 view .LVU190
 808 005a 2B6E     		ldr	r3, [r5, #96]
 809              		.loc 1 347 64 view .LVU191
 810 005c 37F91420 		ldrsh	r2, [r7, r4, lsl #1]
 811 0060 00EE102A 		vmov	s0, r2	@ int
 812              		.loc 1 347 3 view .LVU192
 813 0064 4FF40051 		mov	r1, #8192
 814 0068 B8EEC00A 		vcvt.f32.s32	s0, s0
 815 006c 2846     		mov	r0, r5
 816 006e 9847     		blx	r3
 817              	.LVL53:
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   motor_pid[motor_ID].target = abs_pid[motor_ID].output; 																							
 818              		.loc 1 349 3 is_stmt 1 view .LVU193
 819              		.loc 1 349 49 is_stmt 0 view .LVU194
 820 0070 2B6B     		ldr	r3, [r5, #48]	@ float
 821              		.loc 1 349 30 view .LVU195
 822 0072 2B48     		ldr	r0, .L31+32
 823 0074 3044     		add	r0, r0, r6
 824 0076 4360     		str	r3, [r0, #4]	@ float
 350:Core/Src/main.c ****   motor_pid[motor_ID].f_cal_pid(&motor_pid[motor_ID],moto_chassis[motor_ID].speed_rpm, 0);
 825              		.loc 1 350 3 is_stmt 1 view .LVU196
 826              		.loc 1 350 22 is_stmt 0 view .LVU197
 827 0078 026E     		ldr	r2, [r0, #96]
 828              		.loc 1 350 76 view .LVU198
 829 007a 04EB4403 		add	r3, r4, r4, lsl #1
 830 007e 1B01     		lsls	r3, r3, #4
 831 0080 2849     		ldr	r1, .L31+36
 832 0082 CB5E     		ldrsh	r3, [r1, r3]
 833 0084 00EE103A 		vmov	s0, r3	@ int
 834              		.loc 1 350 3 view .LVU199
 835 0088 0021     		movs	r1, #0
 836 008a B8EEC00A 		vcvt.f32.s32	s0, s0
 837 008e 9047     		blx	r2
 838              	.LVL54:
 351:Core/Src/main.c **** 
 352:Core/Src/main.c ****   if(motor_ID == 0) set_moto_current(&hcan1, motor_pid[motor_ID].output, 0, 0, 0);
 839              		.loc 1 352 3 is_stmt 1 view .LVU200
 840              		.loc 1 352 5 is_stmt 0 view .LVU201
 841 0090 94B1     		cbz	r4, .L29
 842              	.L26:
 353:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
 843              		.loc 1 353 3 is_stmt 1 view .LVU202
 844              		.loc 1 353 5 is_stmt 0 view .LVU203
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 22


 845 0092 012C     		cmp	r4, #1
 846 0094 22D0     		beq	.L30
 847              	.L27:
 354:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 355:Core/Src/main.c ****   //printf("%d\n", moto_chassis[0].speed_rpm);
 356:Core/Src/main.c ****   //printf("%d\n", moto_chassis[0].total_angle);
 357:Core/Src/main.c ****   //printf("%d, %f, %f\n", ABS_IMU_angle[motor_ID], abs_pid[motor_ID].output, motor_pid[motor_ID].o
 358:Core/Src/main.c ****   printf("%d, %d\n", moto_chassis[motor_ID].angle, ABS_IMU_angle[motor_ID]);
 848              		.loc 1 358 3 is_stmt 1 view .LVU204
 849              		.loc 1 358 44 is_stmt 0 view .LVU205
 850 0096 04EB4402 		add	r2, r4, r4, lsl #1
 851 009a 224B     		ldr	r3, .L31+36
 852 009c 03EB0213 		add	r3, r3, r2, lsl #4
 853              		.loc 1 358 3 view .LVU206
 854 00a0 1A4A     		ldr	r2, .L31+12
 855 00a2 32F91420 		ldrsh	r2, [r2, r4, lsl #1]
 856 00a6 9989     		ldrh	r1, [r3, #12]
 857 00a8 1F48     		ldr	r0, .L31+40
 858 00aa FFF7FEFF 		bl	printf
 859              	.LVL55:
 359:Core/Src/main.c ****   HAL_Delay(1);
 860              		.loc 1 359 3 is_stmt 1 view .LVU207
 861 00ae 0120     		movs	r0, #1
 862 00b0 FFF7FEFF 		bl	HAL_Delay
 863              	.LVL56:
 360:Core/Src/main.c **** }
 864              		.loc 1 360 1 is_stmt 0 view .LVU208
 865 00b4 03B0     		add	sp, sp, #12
 866              	.LCFI20:
 867              		.cfi_remember_state
 868              		.cfi_def_cfa_offset 20
 869              		@ sp needed
 870 00b6 F0BD     		pop	{r4, r5, r6, r7, pc}
 871              	.LVL57:
 872              	.L29:
 873              	.LCFI21:
 874              		.cfi_restore_state
 352:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
 875              		.loc 1 352 21 is_stmt 1 discriminator 1 view .LVU209
 352:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
 876              		.loc 1 352 65 is_stmt 0 discriminator 1 view .LVU210
 877 00b8 194B     		ldr	r3, .L31+32
 878 00ba 6422     		movs	r2, #100
 879 00bc 02FB0433 		mla	r3, r2, r4, r3
 880 00c0 D3ED0C7A 		vldr.32	s15, [r3, #48]
 352:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
 881              		.loc 1 352 21 discriminator 1 view .LVU211
 882 00c4 FDEEE77A 		vcvt.s32.f32	s15, s15
 883 00c8 0022     		movs	r2, #0
 884 00ca 0092     		str	r2, [sp]
 885 00cc 1346     		mov	r3, r2
 886 00ce 17EE901A 		vmov	r1, s15	@ int
 887 00d2 09B2     		sxth	r1, r1
 888 00d4 1548     		ldr	r0, .L31+44
 889 00d6 FFF7FEFF 		bl	set_moto_current
 890              	.LVL58:
 891 00da DAE7     		b	.L26
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 23


 892              	.L30:
 353:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 893              		.loc 1 353 21 is_stmt 1 discriminator 1 view .LVU212
 353:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 894              		.loc 1 353 68 is_stmt 0 discriminator 1 view .LVU213
 895 00dc 104B     		ldr	r3, .L31+32
 896 00de 6422     		movs	r2, #100
 897 00e0 02FB0433 		mla	r3, r2, r4, r3
 898 00e4 D3ED0C7A 		vldr.32	s15, [r3, #48]
 353:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 899              		.loc 1 353 21 discriminator 1 view .LVU214
 900 00e8 FDEEE77A 		vcvt.s32.f32	s15, s15
 901 00ec 0021     		movs	r1, #0
 902 00ee 0091     		str	r1, [sp]
 903 00f0 0B46     		mov	r3, r1
 904 00f2 17EE902A 		vmov	r2, s15	@ int
 905 00f6 12B2     		sxth	r2, r2
 906 00f8 0C48     		ldr	r0, .L31+44
 907 00fa FFF7FEFF 		bl	set_moto_current
 908              	.LVL59:
 909 00fe CAE7     		b	.L27
 910              	.L32:
 911              		.align	2
 912              	.L31:
 913 0100 00000000 		.word	.LANCHOR2
 914 0104 00000046 		.word	1174405120
 915 0108 0000B443 		.word	1135869952
 916 010c 00000000 		.word	.LANCHOR3
 917 0110 00806640 		.word	1080459264
 918 0114 0000C040 		.word	1086324736
 919 0118 00807640 		.word	1081507840
 920 011c 00000000 		.word	.LANCHOR5
 921 0120 00000000 		.word	.LANCHOR6
 922 0124 00000000 		.word	moto_chassis
 923 0128 00000000 		.word	.LC1
 924 012c 00000000 		.word	hcan1
 925              		.cfi_endproc
 926              	.LFE140:
 928              		.section	.rodata.Rel_angle_PID_test_loop.str1.4,"aMS",%progbits,1
 929              		.align	2
 930              	.LC3:
 931 0000 25662C20 		.ascii	"%f, \000"
 931      00
 932 0005 000000   		.align	2
 933              	.LC4:
 934 0008 25642C20 		.ascii	"%d, %d, %d, %d, %f, %f, %d\012\000"
 934      25642C20 
 934      25642C20 
 934      25642C20 
 934      25662C20 
 935              		.section	.text.Rel_angle_PID_test_loop,"ax",%progbits
 936              		.align	1
 937              		.global	Rel_angle_PID_test_loop
 938              		.syntax unified
 939              		.thumb
 940              		.thumb_func
 942              	Rel_angle_PID_test_loop:
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 24


 943              	.LVL60:
 944              	.LFB141:
 361:Core/Src/main.c **** 
 362:Core/Src/main.c **** //位置环PID效果测试
 363:Core/Src/main.c **** void Rel_angle_PID_test_loop(int motor_ID)
 364:Core/Src/main.c **** {
 945              		.loc 1 364 1 is_stmt 1 view -0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949              		.loc 1 364 1 is_stmt 0 view .LVU216
 950 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 951              	.LCFI22:
 952              		.cfi_def_cfa_offset 24
 953              		.cfi_offset 4, -24
 954              		.cfi_offset 5, -20
 955              		.cfi_offset 6, -16
 956              		.cfi_offset 7, -12
 957              		.cfi_offset 8, -8
 958              		.cfi_offset 14, -4
 959 0004 2DED028B 		vpush.64	{d8}
 960              	.LCFI23:
 961              		.cfi_def_cfa_offset 32
 962              		.cfi_offset 80, -32
 963              		.cfi_offset 81, -28
 964 0008 86B0     		sub	sp, sp, #24
 965              	.LCFI24:
 966              		.cfi_def_cfa_offset 56
 967 000a 0446     		mov	r4, r0
 365:Core/Src/main.c ****   angle_pid[motor_ID].target = 7000;
 968              		.loc 1 365 3 is_stmt 1 view .LVU217
 969              		.loc 1 365 30 is_stmt 0 view .LVU218
 970 000c 6420     		movs	r0, #100
 971              	.LVL61:
 972              		.loc 1 365 30 view .LVU219
 973 000e 00FB04F6 		mul	r6, r0, r4
 974 0012 474D     		ldr	r5, .L39
 975 0014 3544     		add	r5, r5, r6
 976 0016 474B     		ldr	r3, .L39+4
 977 0018 6B60     		str	r3, [r5, #4]	@ float
 366:Core/Src/main.c ****   angle_pid[motor_ID].f_cal_pid(&angle_pid[motor_ID], moto_chassis[motor_ID].angle, 8192);
 978              		.loc 1 366 3 is_stmt 1 view .LVU220
 979              		.loc 1 366 22 is_stmt 0 view .LVU221
 980 001a 2A6E     		ldr	r2, [r5, #96]
 981              		.loc 1 366 77 view .LVU222
 982 001c 464F     		ldr	r7, .L39+8
 983 001e 04EB4403 		add	r3, r4, r4, lsl #1
 984 0022 4FEA0318 		lsl	r8, r3, #4
 985 0026 07EB0313 		add	r3, r7, r3, lsl #4
 986 002a 9B89     		ldrh	r3, [r3, #12]
 987 002c 00EE103A 		vmov	s0, r3	@ int
 988              		.loc 1 366 3 view .LVU223
 989 0030 4FF40051 		mov	r1, #8192
 990 0034 B8EE400A 		vcvt.f32.u32	s0, s0
 991 0038 2846     		mov	r0, r5
 992 003a 9047     		blx	r2
 993              	.LVL62:
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 25


 367:Core/Src/main.c ****   //printf("%d\n", (int)angle_pid.output);
 368:Core/Src/main.c **** 
 369:Core/Src/main.c ****   motor_pid[motor_ID].target = angle_pid[motor_ID].output; 																							
 994              		.loc 1 369 3 is_stmt 1 view .LVU224
 995              		.loc 1 369 51 is_stmt 0 view .LVU225
 996 003c 2B6B     		ldr	r3, [r5, #48]	@ float
 997              		.loc 1 369 30 view .LVU226
 998 003e 3F48     		ldr	r0, .L39+12
 999 0040 3044     		add	r0, r0, r6
 1000 0042 4360     		str	r3, [r0, #4]	@ float
 370:Core/Src/main.c ****   motor_pid[motor_ID].f_cal_pid(&motor_pid[motor_ID],moto_chassis[motor_ID].speed_rpm, 0);
 1001              		.loc 1 370 3 is_stmt 1 view .LVU227
 1002              		.loc 1 370 22 is_stmt 0 view .LVU228
 1003 0044 036E     		ldr	r3, [r0, #96]
 1004              		.loc 1 370 76 view .LVU229
 1005 0046 37F90820 		ldrsh	r2, [r7, r8]
 1006 004a 00EE102A 		vmov	s0, r2	@ int
 1007              		.loc 1 370 3 view .LVU230
 1008 004e 0021     		movs	r1, #0
 1009 0050 B8EEC00A 		vcvt.f32.s32	s0, s0
 1010 0054 9847     		blx	r3
 1011              	.LVL63:
 371:Core/Src/main.c **** 
 372:Core/Src/main.c ****   if(motor_ID == 0) set_moto_current(&hcan1, motor_pid[motor_ID].output, 0, 0, 0);
 1012              		.loc 1 372 3 is_stmt 1 view .LVU231
 1013              		.loc 1 372 5 is_stmt 0 view .LVU232
 1014 0056 002C     		cmp	r4, #0
 1015 0058 46D0     		beq	.L37
 1016              	.L34:
 373:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
 1017              		.loc 1 373 3 is_stmt 1 view .LVU233
 1018              		.loc 1 373 5 is_stmt 0 view .LVU234
 1019 005a 012C     		cmp	r4, #1
 1020 005c 56D0     		beq	.L38
 1021              	.L35:
 374:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 375:Core/Src/main.c ****   //printf("%d\n", moto_chassis[0].speed_rpm);
 376:Core/Src/main.c ****   //printf("%d\n", moto_chassis[0].total_angle);
 377:Core/Src/main.c ****   printf("%f, ", (float)j);
 1022              		.loc 1 377 3 is_stmt 1 view .LVU235
 1023              		.loc 1 377 18 is_stmt 0 view .LVU236
 1024 005e 384B     		ldr	r3, .L39+16
 1025 0060 1868     		ldr	r0, [r3]
 1026              		.loc 1 377 3 view .LVU237
 1027 0062 07EE900A 		vmov	s15, r0	@ int
 1028 0066 F8EEE77A 		vcvt.f32.s32	s15, s15
 1029 006a 17EE900A 		vmov	r0, s15
 1030 006e FFF7FEFF 		bl	__aeabi_f2d
 1031              	.LVL64:
 1032 0072 0246     		mov	r2, r0
 1033 0074 0B46     		mov	r3, r1
 1034 0076 3348     		ldr	r0, .L39+20
 1035 0078 FFF7FEFF 		bl	printf
 1036              	.LVL65:
 378:Core/Src/main.c ****   HAL_Delay(1);
 1037              		.loc 1 378 3 is_stmt 1 view .LVU238
 1038 007c 0120     		movs	r0, #1
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 26


 1039 007e FFF7FEFF 		bl	HAL_Delay
 1040              	.LVL66:
 379:Core/Src/main.c ****   printf("%d, %d, %d, %d, %f, %f, %d\n", 
 1041              		.loc 1 379 3 view .LVU239
 380:Core/Src/main.c ****                     speed_set, moto_chassis[motor_ID].angle, 
 1042              		.loc 1 380 54 is_stmt 0 view .LVU240
 1043 0082 04EB4402 		add	r2, r4, r4, lsl #1
 1044 0086 2C4B     		ldr	r3, .L39+8
 1045 0088 03EB0213 		add	r3, r3, r2, lsl #4
 1046 008c 9D89     		ldrh	r5, [r3, #12]
 381:Core/Src/main.c ****                     (int)motor_pid[motor_ID].output, 
 1047              		.loc 1 381 45 view .LVU241
 1048 008e 6423     		movs	r3, #100
 1049 0090 04FB03F3 		mul	r3, r4, r3
 1050 0094 294A     		ldr	r2, .L39+12
 1051 0096 1A44     		add	r2, r2, r3
 1052 0098 92ED0C8A 		vldr.32	s16, [r2, #48]
 382:Core/Src/main.c ****                     (int)motor_pid[motor_ID].iout, 
 1053              		.loc 1 382 45 view .LVU242
 1054 009c D2ED0A8A 		vldr.32	s17, [r2, #40]
 383:Core/Src/main.c ****                     angle_pid[motor_ID].output, 
 1055              		.loc 1 383 40 view .LVU243
 1056 00a0 234A     		ldr	r2, .L39
 1057 00a2 1344     		add	r3, r3, r2
 1058 00a4 1F6B     		ldr	r7, [r3, #48]	@ float
 384:Core/Src/main.c ****                     IMU_Angle[motor_ID]);
 1059              		.loc 1 384 30 view .LVU244
 1060 00a6 2848     		ldr	r0, .L39+24
 1061 00a8 00EB8404 		add	r4, r0, r4, lsl #2
 1062              	.LVL67:
 379:Core/Src/main.c ****                     speed_set, moto_chassis[motor_ID].angle, 
 1063              		.loc 1 379 3 view .LVU245
 1064 00ac BDEEC88A 		vcvt.s32.f32	s16, s16
 1065 00b0 264B     		ldr	r3, .L39+28
 1066 00b2 1E68     		ldr	r6, [r3]
 1067 00b4 2068     		ldr	r0, [r4]	@ float
 1068 00b6 FFF7FEFF 		bl	__aeabi_f2d
 1069              	.LVL68:
 1070 00ba CDE90401 		strd	r0, [sp, #16]
 1071 00be 3846     		mov	r0, r7	@ float
 1072 00c0 FFF7FEFF 		bl	__aeabi_f2d
 1073              	.LVL69:
 1074 00c4 CDE90201 		strd	r0, [sp, #8]
 1075 00c8 FDEEE88A 		vcvt.s32.f32	s17, s17
 1076 00cc CDED008A 		vstr.32	s17, [sp]	@ int
 1077 00d0 18EE103A 		vmov	r3, s16	@ int
 1078 00d4 2A46     		mov	r2, r5
 1079 00d6 3146     		mov	r1, r6
 1080 00d8 1D48     		ldr	r0, .L39+32
 1081 00da FFF7FEFF 		bl	printf
 1082              	.LVL70:
 385:Core/Src/main.c **** }
 1083              		.loc 1 385 1 view .LVU246
 1084 00de 06B0     		add	sp, sp, #24
 1085              	.LCFI25:
 1086              		.cfi_remember_state
 1087              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 27


 1088              		@ sp needed
 1089 00e0 BDEC028B 		vldm	sp!, {d8}
 1090              	.LCFI26:
 1091              		.cfi_restore 80
 1092              		.cfi_restore 81
 1093              		.cfi_def_cfa_offset 24
 1094 00e4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1095              	.LVL71:
 1096              	.L37:
 1097              	.LCFI27:
 1098              		.cfi_restore_state
 372:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
 1099              		.loc 1 372 21 is_stmt 1 discriminator 1 view .LVU247
 372:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
 1100              		.loc 1 372 65 is_stmt 0 discriminator 1 view .LVU248
 1101 00e8 144B     		ldr	r3, .L39+12
 1102 00ea 6422     		movs	r2, #100
 1103 00ec 02FB0433 		mla	r3, r2, r4, r3
 1104 00f0 D3ED0C7A 		vldr.32	s15, [r3, #48]
 372:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
 1105              		.loc 1 372 21 discriminator 1 view .LVU249
 1106 00f4 FDEEE77A 		vcvt.s32.f32	s15, s15
 1107 00f8 0022     		movs	r2, #0
 1108 00fa 0092     		str	r2, [sp]
 1109 00fc 1346     		mov	r3, r2
 1110 00fe 17EE901A 		vmov	r1, s15	@ int
 1111 0102 09B2     		sxth	r1, r1
 1112 0104 1348     		ldr	r0, .L39+36
 1113 0106 FFF7FEFF 		bl	set_moto_current
 1114              	.LVL72:
 1115 010a A6E7     		b	.L34
 1116              	.L38:
 373:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 1117              		.loc 1 373 21 is_stmt 1 discriminator 1 view .LVU250
 373:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 1118              		.loc 1 373 68 is_stmt 0 discriminator 1 view .LVU251
 1119 010c 0B4B     		ldr	r3, .L39+12
 1120 010e 6422     		movs	r2, #100
 1121 0110 02FB0433 		mla	r3, r2, r4, r3
 1122 0114 D3ED0C7A 		vldr.32	s15, [r3, #48]
 373:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 1123              		.loc 1 373 21 discriminator 1 view .LVU252
 1124 0118 FDEEE77A 		vcvt.s32.f32	s15, s15
 1125 011c 0021     		movs	r1, #0
 1126 011e 0091     		str	r1, [sp]
 1127 0120 0B46     		mov	r3, r1
 1128 0122 17EE902A 		vmov	r2, s15	@ int
 1129 0126 12B2     		sxth	r2, r2
 1130 0128 0A48     		ldr	r0, .L39+36
 1131 012a FFF7FEFF 		bl	set_moto_current
 1132              	.LVL73:
 1133 012e 96E7     		b	.L35
 1134              	.L40:
 1135              		.align	2
 1136              	.L39:
 1137 0130 00000000 		.word	.LANCHOR9
 1138 0134 00C0DA45 		.word	1171963904
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 28


 1139 0138 00000000 		.word	moto_chassis
 1140 013c 00000000 		.word	.LANCHOR6
 1141 0140 00000000 		.word	.LANCHOR10
 1142 0144 00000000 		.word	.LC3
 1143 0148 00000000 		.word	.LANCHOR2
 1144 014c 00000000 		.word	.LANCHOR11
 1145 0150 08000000 		.word	.LC4
 1146 0154 00000000 		.word	hcan1
 1147              		.cfi_endproc
 1148              	.LFE141:
 1150              		.section	.text.speed_loop_PID_tuning,"ax",%progbits
 1151              		.align	1
 1152              		.global	speed_loop_PID_tuning
 1153              		.syntax unified
 1154              		.thumb
 1155              		.thumb_func
 1157              	speed_loop_PID_tuning:
 1158              	.LVL74:
 1159              	.LFB142:
 386:Core/Src/main.c **** 
 387:Core/Src/main.c **** //速度环科学调参（编码器角速度）
 388:Core/Src/main.c **** void speed_loop_PID_tuning(int motor_ID)
 389:Core/Src/main.c **** {
 1160              		.loc 1 389 1 is_stmt 1 view -0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 0
 1163              		@ frame_needed = 0, uses_anonymous_args = 0
 1164              		.loc 1 389 1 is_stmt 0 view .LVU254
 1165 0000 10B5     		push	{r4, lr}
 1166              	.LCFI28:
 1167              		.cfi_def_cfa_offset 8
 1168              		.cfi_offset 4, -8
 1169              		.cfi_offset 14, -4
 1170 0002 82B0     		sub	sp, sp, #8
 1171              	.LCFI29:
 1172              		.cfi_def_cfa_offset 16
 1173 0004 0446     		mov	r4, r0
 390:Core/Src/main.c ****   speed = moto_chassis[motor_ID].speed_rpm;
 1174              		.loc 1 390 3 is_stmt 1 view .LVU255
 1175              		.loc 1 390 33 is_stmt 0 view .LVU256
 1176 0006 00EB4003 		add	r3, r0, r0, lsl #1
 1177 000a 1B01     		lsls	r3, r3, #4
 1178 000c 244A     		ldr	r2, .L50
 1179 000e D25E     		ldrsh	r2, [r2, r3]
 1180              		.loc 1 390 9 view .LVU257
 1181 0010 244B     		ldr	r3, .L50+4
 1182 0012 1A60     		str	r2, [r3]
 391:Core/Src/main.c ****   time++;
 1183              		.loc 1 391 3 is_stmt 1 view .LVU258
 1184              		.loc 1 391 7 is_stmt 0 view .LVU259
 1185 0014 244A     		ldr	r2, .L50+8
 1186 0016 1368     		ldr	r3, [r2]
 1187 0018 0133     		adds	r3, r3, #1
 1188 001a 1360     		str	r3, [r2]
 392:Core/Src/main.c ****   if(i <= 400) current = 0;
 1189              		.loc 1 392 3 is_stmt 1 view .LVU260
 1190              		.loc 1 392 8 is_stmt 0 view .LVU261
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 29


 1191 001c 234B     		ldr	r3, .L50+12
 1192 001e 1B68     		ldr	r3, [r3]
 1193              		.loc 1 392 5 view .LVU262
 1194 0020 B3F5C87F 		cmp	r3, #400
 1195 0024 23DC     		bgt	.L42
 1196              		.loc 1 392 16 is_stmt 1 discriminator 1 view .LVU263
 1197              		.loc 1 392 24 is_stmt 0 discriminator 1 view .LVU264
 1198 0026 224A     		ldr	r2, .L50+16
 1199 0028 0021     		movs	r1, #0
 1200 002a 1160     		str	r1, [r2]
 1201              	.L43:
 393:Core/Src/main.c ****   else current = 1500;
 394:Core/Src/main.c **** 
 395:Core/Src/main.c ****   if(i >= 800) i = 0;
 1202              		.loc 1 395 3 is_stmt 1 view .LVU265
 1203              		.loc 1 395 5 is_stmt 0 view .LVU266
 1204 002c B3F5487F 		cmp	r3, #800
 1205 0030 02DB     		blt	.L44
 1206              		.loc 1 395 16 is_stmt 1 discriminator 1 view .LVU267
 1207              		.loc 1 395 18 is_stmt 0 discriminator 1 view .LVU268
 1208 0032 1E4B     		ldr	r3, .L50+12
 1209 0034 0022     		movs	r2, #0
 1210 0036 1A60     		str	r2, [r3]
 1211              	.L44:
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   printf("%f, ", (float)j);
 1212              		.loc 1 397 3 is_stmt 1 view .LVU269
 1213              		.loc 1 397 18 is_stmt 0 view .LVU270
 1214 0038 1E4B     		ldr	r3, .L50+20
 1215 003a 1868     		ldr	r0, [r3]
 1216              	.LVL75:
 1217              		.loc 1 397 3 view .LVU271
 1218 003c 07EE900A 		vmov	s15, r0	@ int
 1219 0040 F8EEE77A 		vcvt.f32.s32	s15, s15
 1220 0044 17EE900A 		vmov	r0, s15
 1221 0048 FFF7FEFF 		bl	__aeabi_f2d
 1222              	.LVL76:
 1223 004c 0246     		mov	r2, r0
 1224 004e 0B46     		mov	r3, r1
 1225 0050 1948     		ldr	r0, .L50+24
 1226 0052 FFF7FEFF 		bl	printf
 1227              	.LVL77:
 398:Core/Src/main.c ****   printf("%d, %d\n", current, speed);
 1228              		.loc 1 398 3 is_stmt 1 view .LVU272
 1229 0056 134B     		ldr	r3, .L50+4
 1230 0058 1A68     		ldr	r2, [r3]
 1231 005a 154B     		ldr	r3, .L50+16
 1232 005c 1968     		ldr	r1, [r3]
 1233 005e 1748     		ldr	r0, .L50+28
 1234 0060 FFF7FEFF 		bl	printf
 1235              	.LVL78:
 399:Core/Src/main.c ****   if(motor_ID == 0) set_moto_current(&hcan1, current, 0, 0, 0);
 1236              		.loc 1 399 3 view .LVU273
 1237              		.loc 1 399 5 is_stmt 0 view .LVU274
 1238 0064 44B1     		cbz	r4, .L48
 1239              	.L45:
 400:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, current, 0, 0);
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 30


 1240              		.loc 1 400 3 is_stmt 1 view .LVU275
 1241              		.loc 1 400 5 is_stmt 0 view .LVU276
 1242 0066 012C     		cmp	r4, #1
 1243 0068 10D0     		beq	.L49
 1244              	.L41:
 401:Core/Src/main.c **** }
 1245              		.loc 1 401 1 view .LVU277
 1246 006a 02B0     		add	sp, sp, #8
 1247              	.LCFI30:
 1248              		.cfi_remember_state
 1249              		.cfi_def_cfa_offset 8
 1250              		@ sp needed
 1251 006c 10BD     		pop	{r4, pc}
 1252              	.LVL79:
 1253              	.L42:
 1254              	.LCFI31:
 1255              		.cfi_restore_state
 393:Core/Src/main.c **** 
 1256              		.loc 1 393 8 is_stmt 1 view .LVU278
 393:Core/Src/main.c **** 
 1257              		.loc 1 393 16 is_stmt 0 view .LVU279
 1258 006e 104A     		ldr	r2, .L50+16
 1259 0070 40F2DC51 		movw	r1, #1500
 1260 0074 1160     		str	r1, [r2]
 1261 0076 D9E7     		b	.L43
 1262              	.LVL80:
 1263              	.L48:
 399:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, current, 0, 0);
 1264              		.loc 1 399 21 is_stmt 1 discriminator 1 view .LVU280
 1265 0078 0022     		movs	r2, #0
 1266 007a 0092     		str	r2, [sp]
 1267 007c 1346     		mov	r3, r2
 1268 007e 0C49     		ldr	r1, .L50+16
 1269 0080 B1F90010 		ldrsh	r1, [r1]
 1270 0084 0E48     		ldr	r0, .L50+32
 1271 0086 FFF7FEFF 		bl	set_moto_current
 1272              	.LVL81:
 1273 008a ECE7     		b	.L45
 1274              	.L49:
 400:Core/Src/main.c **** }
 1275              		.loc 1 400 21 discriminator 1 view .LVU281
 1276 008c 0021     		movs	r1, #0
 1277 008e 0091     		str	r1, [sp]
 1278 0090 0B46     		mov	r3, r1
 1279 0092 074A     		ldr	r2, .L50+16
 1280 0094 B2F90020 		ldrsh	r2, [r2]
 1281 0098 0948     		ldr	r0, .L50+32
 1282 009a FFF7FEFF 		bl	set_moto_current
 1283              	.LVL82:
 1284              		.loc 1 401 1 is_stmt 0 discriminator 1 view .LVU282
 1285 009e E4E7     		b	.L41
 1286              	.L51:
 1287              		.align	2
 1288              	.L50:
 1289 00a0 00000000 		.word	moto_chassis
 1290 00a4 00000000 		.word	.LANCHOR12
 1291 00a8 00000000 		.word	.LANCHOR13
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 31


 1292 00ac 00000000 		.word	.LANCHOR7
 1293 00b0 00000000 		.word	.LANCHOR14
 1294 00b4 00000000 		.word	.LANCHOR10
 1295 00b8 00000000 		.word	.LC3
 1296 00bc 00000000 		.word	.LC1
 1297 00c0 00000000 		.word	hcan1
 1298              		.cfi_endproc
 1299              	.LFE142:
 1301              		.section	.text.Rel_angleloop_PID_tuning,"ax",%progbits
 1302              		.align	1
 1303              		.global	Rel_angleloop_PID_tuning
 1304              		.syntax unified
 1305              		.thumb
 1306              		.thumb_func
 1308              	Rel_angleloop_PID_tuning:
 1309              	.LVL83:
 1310              	.LFB143:
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** //编码器位置环科学调参
 404:Core/Src/main.c **** void Rel_angleloop_PID_tuning(int motor_ID)
 405:Core/Src/main.c **** {
 1311              		.loc 1 405 1 is_stmt 1 view -0
 1312              		.cfi_startproc
 1313              		@ args = 0, pretend = 0, frame = 0
 1314              		@ frame_needed = 0, uses_anonymous_args = 0
 1315              		.loc 1 405 1 is_stmt 0 view .LVU284
 1316 0000 10B5     		push	{r4, lr}
 1317              	.LCFI32:
 1318              		.cfi_def_cfa_offset 8
 1319              		.cfi_offset 4, -8
 1320              		.cfi_offset 14, -4
 1321 0002 82B0     		sub	sp, sp, #8
 1322              	.LCFI33:
 1323              		.cfi_def_cfa_offset 16
 1324 0004 0446     		mov	r4, r0
 406:Core/Src/main.c ****   if(i <= 100) speed_set = 0;
 1325              		.loc 1 406 3 is_stmt 1 view .LVU285
 1326              		.loc 1 406 8 is_stmt 0 view .LVU286
 1327 0006 3D4B     		ldr	r3, .L62
 1328 0008 1B68     		ldr	r3, [r3]
 1329              		.loc 1 406 5 view .LVU287
 1330 000a 642B     		cmp	r3, #100
 1331 000c 3FDC     		bgt	.L53
 1332              		.loc 1 406 16 is_stmt 1 discriminator 1 view .LVU288
 1333              		.loc 1 406 26 is_stmt 0 discriminator 1 view .LVU289
 1334 000e 3C4A     		ldr	r2, .L62+4
 1335 0010 0021     		movs	r1, #0
 1336 0012 1160     		str	r1, [r2]
 1337              	.L54:
 407:Core/Src/main.c ****   else if(i >100 && i<=1100) speed_set = -15;
 408:Core/Src/main.c ****   else if(i >1100 && i<=2100) speed_set = 15;
 409:Core/Src/main.c ****   if(i > 2100) i = 0;
 1338              		.loc 1 409 3 is_stmt 1 view .LVU290
 1339              		.loc 1 409 5 is_stmt 0 view .LVU291
 1340 0014 40F63402 		movw	r2, #2100
 1341 0018 9342     		cmp	r3, r2
 1342 001a 02DD     		ble	.L56
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 32


 1343              		.loc 1 409 16 is_stmt 1 discriminator 1 view .LVU292
 1344              		.loc 1 409 18 is_stmt 0 discriminator 1 view .LVU293
 1345 001c 374B     		ldr	r3, .L62
 1346 001e 0022     		movs	r2, #0
 1347 0020 1A60     		str	r2, [r3]
 1348              	.L56:
 410:Core/Src/main.c ****   //speed_set = 25;
 411:Core/Src/main.c ****   
 412:Core/Src/main.c ****   motor_pid[motor_ID].target = speed_set; 																							
 1349              		.loc 1 412 3 is_stmt 1 view .LVU294
 1350              		.loc 1 412 30 is_stmt 0 view .LVU295
 1351 0022 3848     		ldr	r0, .L62+8
 1352              	.LVL84:
 1353              		.loc 1 412 30 view .LVU296
 1354 0024 6423     		movs	r3, #100
 1355 0026 03FB0400 		mla	r0, r3, r4, r0
 1356 002a 354B     		ldr	r3, .L62+4
 1357 002c D3ED007A 		vldr.32	s15, [r3]	@ int
 1358 0030 F8EEE77A 		vcvt.f32.s32	s15, s15
 1359 0034 C0ED017A 		vstr.32	s15, [r0, #4]
 413:Core/Src/main.c ****   motor_pid[motor_ID].f_cal_pid(&motor_pid[motor_ID], moto_chassis[motor_ID].speed_rpm, 0);
 1360              		.loc 1 413 3 is_stmt 1 view .LVU297
 1361              		.loc 1 413 22 is_stmt 0 view .LVU298
 1362 0038 026E     		ldr	r2, [r0, #96]
 1363              		.loc 1 413 77 view .LVU299
 1364 003a 04EB4403 		add	r3, r4, r4, lsl #1
 1365 003e 1B01     		lsls	r3, r3, #4
 1366 0040 3149     		ldr	r1, .L62+12
 1367 0042 CB5E     		ldrsh	r3, [r1, r3]
 1368 0044 00EE103A 		vmov	s0, r3	@ int
 1369              		.loc 1 413 3 view .LVU300
 1370 0048 0021     		movs	r1, #0
 1371 004a B8EEC00A 		vcvt.f32.s32	s0, s0
 1372 004e 9047     		blx	r2
 1373              	.LVL85:
 414:Core/Src/main.c ****   if(motor_ID == 0) set_moto_current(&hcan1, motor_pid[motor_ID].output, 0, 0, 0);
 1374              		.loc 1 414 3 is_stmt 1 view .LVU301
 1375              		.loc 1 414 5 is_stmt 0 view .LVU302
 1376 0050 84B3     		cbz	r4, .L60
 1377              	.L57:
 415:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
 1378              		.loc 1 415 3 is_stmt 1 view .LVU303
 1379              		.loc 1 415 5 is_stmt 0 view .LVU304
 1380 0052 012C     		cmp	r4, #1
 1381 0054 40D0     		beq	.L61
 1382              	.L58:
 416:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 417:Core/Src/main.c ****   //printf("%d\n", moto_chassis[0].speed_rpm);
 418:Core/Src/main.c ****   //printf("%d\n", moto_chassis[0].total_angle);
 419:Core/Src/main.c ****   printf("%f, ", (float)j);
 1383              		.loc 1 419 3 is_stmt 1 view .LVU305
 1384              		.loc 1 419 18 is_stmt 0 view .LVU306
 1385 0056 2D4B     		ldr	r3, .L62+16
 1386 0058 1868     		ldr	r0, [r3]
 1387              		.loc 1 419 3 view .LVU307
 1388 005a 07EE900A 		vmov	s15, r0	@ int
 1389 005e F8EEE77A 		vcvt.f32.s32	s15, s15
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 33


 1390 0062 17EE900A 		vmov	r0, s15
 1391 0066 FFF7FEFF 		bl	__aeabi_f2d
 1392              	.LVL86:
 1393 006a 0246     		mov	r2, r0
 1394 006c 0B46     		mov	r3, r1
 1395 006e 2848     		ldr	r0, .L62+20
 1396 0070 FFF7FEFF 		bl	printf
 1397              	.LVL87:
 420:Core/Src/main.c ****   printf("%d, %d\n", speed_set, moto_chassis[motor_ID].total_angle);
 1398              		.loc 1 420 3 is_stmt 1 view .LVU308
 1399 0074 04EB4404 		add	r4, r4, r4, lsl #1
 1400              	.LVL88:
 1401              		.loc 1 420 3 is_stmt 0 view .LVU309
 1402 0078 2348     		ldr	r0, .L62+12
 1403 007a 00EB0414 		add	r4, r0, r4, lsl #4
 1404 007e A269     		ldr	r2, [r4, #24]
 1405 0080 1F4B     		ldr	r3, .L62+4
 1406 0082 1968     		ldr	r1, [r3]
 1407 0084 2348     		ldr	r0, .L62+24
 1408 0086 FFF7FEFF 		bl	printf
 1409              	.LVL89:
 421:Core/Src/main.c **** }
 1410              		.loc 1 421 1 view .LVU310
 1411 008a 02B0     		add	sp, sp, #8
 1412              	.LCFI34:
 1413              		.cfi_remember_state
 1414              		.cfi_def_cfa_offset 8
 1415              		@ sp needed
 1416 008c 10BD     		pop	{r4, pc}
 1417              	.LVL90:
 1418              	.L53:
 1419              	.LCFI35:
 1420              		.cfi_restore_state
 407:Core/Src/main.c ****   else if(i >1100 && i<=2100) speed_set = 15;
 1421              		.loc 1 407 8 is_stmt 1 view .LVU311
 407:Core/Src/main.c ****   else if(i >1100 && i<=2100) speed_set = 15;
 1422              		.loc 1 407 18 is_stmt 0 view .LVU312
 1423 008e A3F16502 		sub	r2, r3, #101
 407:Core/Src/main.c ****   else if(i >1100 && i<=2100) speed_set = 15;
 1424              		.loc 1 407 10 view .LVU313
 1425 0092 B2F57A7F 		cmp	r2, #1000
 1426 0096 04D2     		bcs	.L55
 407:Core/Src/main.c ****   else if(i >1100 && i<=2100) speed_set = 15;
 1427              		.loc 1 407 30 is_stmt 1 discriminator 1 view .LVU314
 407:Core/Src/main.c ****   else if(i >1100 && i<=2100) speed_set = 15;
 1428              		.loc 1 407 40 is_stmt 0 discriminator 1 view .LVU315
 1429 0098 194A     		ldr	r2, .L62+4
 1430 009a 6FF00E01 		mvn	r1, #14
 1431 009e 1160     		str	r1, [r2]
 1432 00a0 B8E7     		b	.L54
 1433              	.L55:
 408:Core/Src/main.c ****   if(i > 2100) i = 0;
 1434              		.loc 1 408 8 is_stmt 1 view .LVU316
 408:Core/Src/main.c ****   if(i > 2100) i = 0;
 1435              		.loc 1 408 19 is_stmt 0 view .LVU317
 1436 00a2 A3F24D42 		subw	r2, r3, #1101
 408:Core/Src/main.c ****   if(i > 2100) i = 0;
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 34


 1437              		.loc 1 408 10 view .LVU318
 1438 00a6 B2F57A7F 		cmp	r2, #1000
 1439 00aa B3D2     		bcs	.L54
 408:Core/Src/main.c ****   if(i > 2100) i = 0;
 1440              		.loc 1 408 31 is_stmt 1 discriminator 1 view .LVU319
 408:Core/Src/main.c ****   if(i > 2100) i = 0;
 1441              		.loc 1 408 41 is_stmt 0 discriminator 1 view .LVU320
 1442 00ac 144A     		ldr	r2, .L62+4
 1443 00ae 0F21     		movs	r1, #15
 1444 00b0 1160     		str	r1, [r2]
 1445 00b2 AFE7     		b	.L54
 1446              	.LVL91:
 1447              	.L60:
 414:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
 1448              		.loc 1 414 21 is_stmt 1 discriminator 1 view .LVU321
 414:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
 1449              		.loc 1 414 65 is_stmt 0 discriminator 1 view .LVU322
 1450 00b4 134B     		ldr	r3, .L62+8
 1451 00b6 6422     		movs	r2, #100
 1452 00b8 02FB0433 		mla	r3, r2, r4, r3
 1453 00bc D3ED0C7A 		vldr.32	s15, [r3, #48]
 414:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
 1454              		.loc 1 414 21 discriminator 1 view .LVU323
 1455 00c0 FDEEE77A 		vcvt.s32.f32	s15, s15
 1456 00c4 0022     		movs	r2, #0
 1457 00c6 0092     		str	r2, [sp]
 1458 00c8 1346     		mov	r3, r2
 1459 00ca 17EE901A 		vmov	r1, s15	@ int
 1460 00ce 09B2     		sxth	r1, r1
 1461 00d0 1148     		ldr	r0, .L62+28
 1462 00d2 FFF7FEFF 		bl	set_moto_current
 1463              	.LVL92:
 1464 00d6 BCE7     		b	.L57
 1465              	.L61:
 415:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 1466              		.loc 1 415 21 is_stmt 1 discriminator 1 view .LVU324
 415:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 1467              		.loc 1 415 68 is_stmt 0 discriminator 1 view .LVU325
 1468 00d8 0A4B     		ldr	r3, .L62+8
 1469 00da 6422     		movs	r2, #100
 1470 00dc 02FB0433 		mla	r3, r2, r4, r3
 1471 00e0 D3ED0C7A 		vldr.32	s15, [r3, #48]
 415:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 1472              		.loc 1 415 21 discriminator 1 view .LVU326
 1473 00e4 FDEEE77A 		vcvt.s32.f32	s15, s15
 1474 00e8 0021     		movs	r1, #0
 1475 00ea 0091     		str	r1, [sp]
 1476 00ec 0B46     		mov	r3, r1
 1477 00ee 17EE902A 		vmov	r2, s15	@ int
 1478 00f2 12B2     		sxth	r2, r2
 1479 00f4 0848     		ldr	r0, .L62+28
 1480 00f6 FFF7FEFF 		bl	set_moto_current
 1481              	.LVL93:
 1482 00fa ACE7     		b	.L58
 1483              	.L63:
 1484              		.align	2
 1485              	.L62:
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 35


 1486 00fc 00000000 		.word	.LANCHOR7
 1487 0100 00000000 		.word	.LANCHOR11
 1488 0104 00000000 		.word	.LANCHOR6
 1489 0108 00000000 		.word	moto_chassis
 1490 010c 00000000 		.word	.LANCHOR10
 1491 0110 00000000 		.word	.LC3
 1492 0114 00000000 		.word	.LC1
 1493 0118 00000000 		.word	hcan1
 1494              		.cfi_endproc
 1495              	.LFE143:
 1497              		.section	.text.Abs_anglelop_PID_tuning,"ax",%progbits
 1498              		.align	1
 1499              		.global	Abs_anglelop_PID_tuning
 1500              		.syntax unified
 1501              		.thumb
 1502              		.thumb_func
 1504              	Abs_anglelop_PID_tuning:
 1505              	.LVL94:
 1506              	.LFB144:
 422:Core/Src/main.c **** 
 423:Core/Src/main.c **** //陀螺仪位置环科学调参
 424:Core/Src/main.c **** void Abs_anglelop_PID_tuning(int motor_ID)
 425:Core/Src/main.c **** {
 1507              		.loc 1 425 1 is_stmt 1 view -0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 0
 1510              		@ frame_needed = 0, uses_anonymous_args = 0
 1511              		.loc 1 425 1 is_stmt 0 view .LVU328
 1512 0000 30B5     		push	{r4, r5, lr}
 1513              	.LCFI36:
 1514              		.cfi_def_cfa_offset 12
 1515              		.cfi_offset 4, -12
 1516              		.cfi_offset 5, -8
 1517              		.cfi_offset 14, -4
 1518 0002 83B0     		sub	sp, sp, #12
 1519              	.LCFI37:
 1520              		.cfi_def_cfa_offset 24
 1521 0004 0446     		mov	r4, r0
 426:Core/Src/main.c ****   //IMU归一化
 427:Core/Src/main.c ****   ABS_IMU_angle[0] = (int)((IMU_Angle[2]*8192)/360); //yaw
 1522              		.loc 1 427 3 is_stmt 1 view .LVU329
 1523              		.loc 1 427 38 is_stmt 0 view .LVU330
 1524 0006 4D4B     		ldr	r3, .L74
 1525 0008 93ED027A 		vldr.32	s14, [r3, #8]
 1526              		.loc 1 427 41 view .LVU331
 1527 000c DFED4C7A 		vldr.32	s15, .L74+4
 1528 0010 27EE277A 		vmul.f32	s14, s14, s15
 1529              		.loc 1 427 47 view .LVU332
 1530 0014 DFED4B6A 		vldr.32	s13, .L74+8
 1531 0018 C7EE267A 		vdiv.f32	s15, s14, s13
 1532              		.loc 1 427 22 view .LVU333
 1533 001c FDEEE77A 		vcvt.s32.f32	s15, s15
 1534              		.loc 1 427 20 view .LVU334
 1535 0020 494D     		ldr	r5, .L74+12
 1536 0022 17EE902A 		vmov	r2, s15	@ int
 1537 0026 2A80     		strh	r2, [r5]	@ movhi
 428:Core/Src/main.c ****   ABS_IMU_angle[1] = (int)(((IMU_Angle[0]+180.0)*8192)/360); //pitch
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 36


 1538              		.loc 1 428 3 is_stmt 1 view .LVU335
 1539              		.loc 1 428 39 is_stmt 0 view .LVU336
 1540 0028 1868     		ldr	r0, [r3]	@ float
 1541              	.LVL95:
 1542              		.loc 1 428 39 view .LVU337
 1543 002a FFF7FEFF 		bl	__aeabi_f2d
 1544              	.LVL96:
 1545              		.loc 1 428 42 view .LVU338
 1546 002e 0022     		movs	r2, #0
 1547 0030 464B     		ldr	r3, .L74+16
 1548 0032 FFF7FEFF 		bl	__aeabi_dadd
 1549              	.LVL97:
 1550              		.loc 1 428 49 view .LVU339
 1551 0036 0022     		movs	r2, #0
 1552 0038 454B     		ldr	r3, .L74+20
 1553 003a FFF7FEFF 		bl	__aeabi_dmul
 1554              	.LVL98:
 1555              		.loc 1 428 55 view .LVU340
 1556 003e 0022     		movs	r2, #0
 1557 0040 444B     		ldr	r3, .L74+24
 1558 0042 FFF7FEFF 		bl	__aeabi_ddiv
 1559              	.LVL99:
 1560              		.loc 1 428 22 view .LVU341
 1561 0046 FFF7FEFF 		bl	__aeabi_d2iz
 1562              	.LVL100:
 1563              		.loc 1 428 20 view .LVU342
 1564 004a 6880     		strh	r0, [r5, #2]	@ movhi
 429:Core/Src/main.c **** 
 430:Core/Src/main.c ****   if(i <= 100) speed_set = 0;
 1565              		.loc 1 430 3 is_stmt 1 view .LVU343
 1566              		.loc 1 430 8 is_stmt 0 view .LVU344
 1567 004c 424B     		ldr	r3, .L74+28
 1568 004e 1B68     		ldr	r3, [r3]
 1569              		.loc 1 430 5 view .LVU345
 1570 0050 642B     		cmp	r3, #100
 1571 0052 3CDC     		bgt	.L65
 1572              		.loc 1 430 16 is_stmt 1 discriminator 1 view .LVU346
 1573              		.loc 1 430 26 is_stmt 0 discriminator 1 view .LVU347
 1574 0054 414A     		ldr	r2, .L74+32
 1575 0056 0021     		movs	r1, #0
 1576 0058 1160     		str	r1, [r2]
 1577              	.L66:
 431:Core/Src/main.c ****   else if(i >100 && i<=1100) speed_set = -15;
 432:Core/Src/main.c ****   else if(i >1100 && i<=2100) speed_set = 15;
 433:Core/Src/main.c ****   if(i > 2100) i = 0;
 1578              		.loc 1 433 3 is_stmt 1 view .LVU348
 1579              		.loc 1 433 5 is_stmt 0 view .LVU349
 1580 005a 40F63402 		movw	r2, #2100
 1581 005e 9342     		cmp	r3, r2
 1582 0060 02DD     		ble	.L68
 1583              		.loc 1 433 16 is_stmt 1 discriminator 1 view .LVU350
 1584              		.loc 1 433 18 is_stmt 0 discriminator 1 view .LVU351
 1585 0062 3D4B     		ldr	r3, .L74+28
 1586 0064 0022     		movs	r2, #0
 1587 0066 1A60     		str	r2, [r3]
 1588              	.L68:
 434:Core/Src/main.c ****   //speed_set = 25;
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 37


 435:Core/Src/main.c ****   
 436:Core/Src/main.c ****   motor_pid[motor_ID].target = speed_set; 																							
 1589              		.loc 1 436 3 is_stmt 1 view .LVU352
 1590              		.loc 1 436 30 is_stmt 0 view .LVU353
 1591 0068 3D48     		ldr	r0, .L74+36
 1592 006a 6423     		movs	r3, #100
 1593 006c 03FB0400 		mla	r0, r3, r4, r0
 1594 0070 3A4B     		ldr	r3, .L74+32
 1595 0072 D3ED007A 		vldr.32	s15, [r3]	@ int
 1596 0076 F8EEE77A 		vcvt.f32.s32	s15, s15
 1597 007a C0ED017A 		vstr.32	s15, [r0, #4]
 437:Core/Src/main.c ****   motor_pid[motor_ID].f_cal_pid(&motor_pid[motor_ID], moto_chassis[motor_ID].speed_rpm, 0);
 1598              		.loc 1 437 3 is_stmt 1 view .LVU354
 1599              		.loc 1 437 22 is_stmt 0 view .LVU355
 1600 007e 026E     		ldr	r2, [r0, #96]
 1601              		.loc 1 437 77 view .LVU356
 1602 0080 04EB4403 		add	r3, r4, r4, lsl #1
 1603 0084 1B01     		lsls	r3, r3, #4
 1604 0086 3749     		ldr	r1, .L74+40
 1605 0088 CB5E     		ldrsh	r3, [r1, r3]
 1606 008a 00EE103A 		vmov	s0, r3	@ int
 1607              		.loc 1 437 3 view .LVU357
 1608 008e 0021     		movs	r1, #0
 1609 0090 B8EEC00A 		vcvt.f32.s32	s0, s0
 1610 0094 9047     		blx	r2
 1611              	.LVL101:
 438:Core/Src/main.c ****   if(motor_ID == 0) set_moto_current(&hcan1, motor_pid[motor_ID].output, 0, 0, 0);
 1612              		.loc 1 438 3 is_stmt 1 view .LVU358
 1613              		.loc 1 438 5 is_stmt 0 view .LVU359
 1614 0096 6CB3     		cbz	r4, .L72
 1615              	.L69:
 439:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
 1616              		.loc 1 439 3 is_stmt 1 view .LVU360
 1617              		.loc 1 439 5 is_stmt 0 view .LVU361
 1618 0098 012C     		cmp	r4, #1
 1619 009a 3DD0     		beq	.L73
 1620              	.L70:
 440:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 441:Core/Src/main.c ****   //printf("%d\n", moto_chassis[0].speed_rpm);
 442:Core/Src/main.c ****   //printf("%d\n", moto_chassis[0].total_angle);
 443:Core/Src/main.c ****   printf("%f, ", (float)j);
 1621              		.loc 1 443 3 is_stmt 1 view .LVU362
 1622              		.loc 1 443 18 is_stmt 0 view .LVU363
 1623 009c 324B     		ldr	r3, .L74+44
 1624 009e 1868     		ldr	r0, [r3]
 1625              		.loc 1 443 3 view .LVU364
 1626 00a0 07EE900A 		vmov	s15, r0	@ int
 1627 00a4 F8EEE77A 		vcvt.f32.s32	s15, s15
 1628 00a8 17EE900A 		vmov	r0, s15
 1629 00ac FFF7FEFF 		bl	__aeabi_f2d
 1630              	.LVL102:
 1631 00b0 0246     		mov	r2, r0
 1632 00b2 0B46     		mov	r3, r1
 1633 00b4 2D48     		ldr	r0, .L74+48
 1634 00b6 FFF7FEFF 		bl	printf
 1635              	.LVL103:
 444:Core/Src/main.c ****   printf("%d, %d\n", speed_set, ABS_IMU_angle[motor_ID]);
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 38


 1636              		.loc 1 444 3 is_stmt 1 view .LVU365
 1637 00ba 234B     		ldr	r3, .L74+12
 1638 00bc 33F91420 		ldrsh	r2, [r3, r4, lsl #1]
 1639 00c0 264B     		ldr	r3, .L74+32
 1640 00c2 1968     		ldr	r1, [r3]
 1641 00c4 2A48     		ldr	r0, .L74+52
 1642 00c6 FFF7FEFF 		bl	printf
 1643              	.LVL104:
 445:Core/Src/main.c **** }
 1644              		.loc 1 445 1 is_stmt 0 view .LVU366
 1645 00ca 03B0     		add	sp, sp, #12
 1646              	.LCFI38:
 1647              		.cfi_remember_state
 1648              		.cfi_def_cfa_offset 12
 1649              		@ sp needed
 1650 00cc 30BD     		pop	{r4, r5, pc}
 1651              	.LVL105:
 1652              	.L65:
 1653              	.LCFI39:
 1654              		.cfi_restore_state
 431:Core/Src/main.c ****   else if(i >1100 && i<=2100) speed_set = 15;
 1655              		.loc 1 431 8 is_stmt 1 view .LVU367
 431:Core/Src/main.c ****   else if(i >1100 && i<=2100) speed_set = 15;
 1656              		.loc 1 431 18 is_stmt 0 view .LVU368
 1657 00ce A3F16502 		sub	r2, r3, #101
 431:Core/Src/main.c ****   else if(i >1100 && i<=2100) speed_set = 15;
 1658              		.loc 1 431 10 view .LVU369
 1659 00d2 B2F57A7F 		cmp	r2, #1000
 1660 00d6 04D2     		bcs	.L67
 431:Core/Src/main.c ****   else if(i >1100 && i<=2100) speed_set = 15;
 1661              		.loc 1 431 30 is_stmt 1 discriminator 1 view .LVU370
 431:Core/Src/main.c ****   else if(i >1100 && i<=2100) speed_set = 15;
 1662              		.loc 1 431 40 is_stmt 0 discriminator 1 view .LVU371
 1663 00d8 204A     		ldr	r2, .L74+32
 1664 00da 6FF00E01 		mvn	r1, #14
 1665 00de 1160     		str	r1, [r2]
 1666 00e0 BBE7     		b	.L66
 1667              	.L67:
 432:Core/Src/main.c ****   if(i > 2100) i = 0;
 1668              		.loc 1 432 8 is_stmt 1 view .LVU372
 432:Core/Src/main.c ****   if(i > 2100) i = 0;
 1669              		.loc 1 432 19 is_stmt 0 view .LVU373
 1670 00e2 A3F24D42 		subw	r2, r3, #1101
 432:Core/Src/main.c ****   if(i > 2100) i = 0;
 1671              		.loc 1 432 10 view .LVU374
 1672 00e6 B2F57A7F 		cmp	r2, #1000
 1673 00ea B6D2     		bcs	.L66
 432:Core/Src/main.c ****   if(i > 2100) i = 0;
 1674              		.loc 1 432 31 is_stmt 1 discriminator 1 view .LVU375
 432:Core/Src/main.c ****   if(i > 2100) i = 0;
 1675              		.loc 1 432 41 is_stmt 0 discriminator 1 view .LVU376
 1676 00ec 1B4A     		ldr	r2, .L74+32
 1677 00ee 0F21     		movs	r1, #15
 1678 00f0 1160     		str	r1, [r2]
 1679 00f2 B2E7     		b	.L66
 1680              	.L72:
 438:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 39


 1681              		.loc 1 438 21 is_stmt 1 discriminator 1 view .LVU377
 438:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
 1682              		.loc 1 438 65 is_stmt 0 discriminator 1 view .LVU378
 1683 00f4 1A4B     		ldr	r3, .L74+36
 1684 00f6 6422     		movs	r2, #100
 1685 00f8 02FB0433 		mla	r3, r2, r4, r3
 1686 00fc D3ED0C7A 		vldr.32	s15, [r3, #48]
 438:Core/Src/main.c ****   if(motor_ID == 1) set_moto_current(&hcan1, 0, motor_pid[motor_ID].output, 0, 0);
 1687              		.loc 1 438 21 discriminator 1 view .LVU379
 1688 0100 FDEEE77A 		vcvt.s32.f32	s15, s15
 1689 0104 0022     		movs	r2, #0
 1690 0106 0092     		str	r2, [sp]
 1691 0108 1346     		mov	r3, r2
 1692 010a 17EE901A 		vmov	r1, s15	@ int
 1693 010e 09B2     		sxth	r1, r1
 1694 0110 1848     		ldr	r0, .L74+56
 1695 0112 FFF7FEFF 		bl	set_moto_current
 1696              	.LVL106:
 1697 0116 BFE7     		b	.L69
 1698              	.L73:
 439:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 1699              		.loc 1 439 21 is_stmt 1 discriminator 1 view .LVU380
 439:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 1700              		.loc 1 439 68 is_stmt 0 discriminator 1 view .LVU381
 1701 0118 114B     		ldr	r3, .L74+36
 1702 011a 6422     		movs	r2, #100
 1703 011c 02FB0433 		mla	r3, r2, r4, r3
 1704 0120 D3ED0C7A 		vldr.32	s15, [r3, #48]
 439:Core/Src/main.c ****   //set_moto_current(&hcan1, 0, 0, 0, 0);
 1705              		.loc 1 439 21 discriminator 1 view .LVU382
 1706 0124 FDEEE77A 		vcvt.s32.f32	s15, s15
 1707 0128 0021     		movs	r1, #0
 1708 012a 0091     		str	r1, [sp]
 1709 012c 0B46     		mov	r3, r1
 1710 012e 17EE902A 		vmov	r2, s15	@ int
 1711 0132 12B2     		sxth	r2, r2
 1712 0134 0F48     		ldr	r0, .L74+56
 1713 0136 FFF7FEFF 		bl	set_moto_current
 1714              	.LVL107:
 1715 013a AFE7     		b	.L70
 1716              	.L75:
 1717              		.align	2
 1718              	.L74:
 1719 013c 00000000 		.word	.LANCHOR2
 1720 0140 00000046 		.word	1174405120
 1721 0144 0000B443 		.word	1135869952
 1722 0148 00000000 		.word	.LANCHOR3
 1723 014c 00806640 		.word	1080459264
 1724 0150 0000C040 		.word	1086324736
 1725 0154 00807640 		.word	1081507840
 1726 0158 00000000 		.word	.LANCHOR7
 1727 015c 00000000 		.word	.LANCHOR11
 1728 0160 00000000 		.word	.LANCHOR6
 1729 0164 00000000 		.word	moto_chassis
 1730 0168 00000000 		.word	.LANCHOR10
 1731 016c 00000000 		.word	.LC3
 1732 0170 00000000 		.word	.LC1
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 40


 1733 0174 00000000 		.word	hcan1
 1734              		.cfi_endproc
 1735              	.LFE144:
 1737              		.section	.text.Error_Handler,"ax",%progbits
 1738              		.align	1
 1739              		.global	Error_Handler
 1740              		.syntax unified
 1741              		.thumb
 1742              		.thumb_func
 1744              	Error_Handler:
 1745              	.LFB145:
 446:Core/Src/main.c **** 
 447:Core/Src/main.c **** 
 448:Core/Src/main.c **** /* USER CODE END 4 */
 449:Core/Src/main.c **** 
 450:Core/Src/main.c **** /**
 451:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 452:Core/Src/main.c ****   * @retval None
 453:Core/Src/main.c ****   */
 454:Core/Src/main.c **** void Error_Handler(void)
 455:Core/Src/main.c **** {
 1746              		.loc 1 455 1 is_stmt 1 view -0
 1747              		.cfi_startproc
 1748              		@ Volatile: function does not return.
 1749              		@ args = 0, pretend = 0, frame = 0
 1750              		@ frame_needed = 0, uses_anonymous_args = 0
 1751              		@ link register save eliminated.
 456:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 457:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 458:Core/Src/main.c ****   __disable_irq();
 1752              		.loc 1 458 3 view .LVU384
 1753              	.LBB5:
 1754              	.LBI5:
 1755              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 41


  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 42


  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 43


 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1756              		.loc 2 140 27 view .LVU385
 1757              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1758              		.loc 2 142 3 view .LVU386
 1759              		.syntax unified
 1760              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1761 0000 72B6     		cpsid i
 1762              	@ 0 "" 2
 1763              		.thumb
 1764              		.syntax unified
 1765              	.L77:
 1766              	.LBE6:
 1767              	.LBE5:
 459:Core/Src/main.c ****   while (1)
 1768              		.loc 1 459 3 discriminator 1 view .LVU387
 460:Core/Src/main.c ****   {
 461:Core/Src/main.c ****   }
 1769              		.loc 1 461 3 discriminator 1 view .LVU388
 459:Core/Src/main.c ****   while (1)
 1770              		.loc 1 459 9 discriminator 1 view .LVU389
 1771 0002 FEE7     		b	.L77
 1772              		.cfi_endproc
 1773              	.LFE145:
 1775              		.section	.text.SystemClock_Config,"ax",%progbits
 1776              		.align	1
 1777              		.global	SystemClock_Config
 1778              		.syntax unified
 1779              		.thumb
 1780              		.thumb_func
 1782              	SystemClock_Config:
 1783              	.LFB134:
 203:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1784              		.loc 1 203 1 view -0
 1785              		.cfi_startproc
 1786              		@ args = 0, pretend = 0, frame = 80
 1787              		@ frame_needed = 0, uses_anonymous_args = 0
 1788 0000 00B5     		push	{lr}
 1789              	.LCFI40:
 1790              		.cfi_def_cfa_offset 4
 1791              		.cfi_offset 14, -4
 1792 0002 95B0     		sub	sp, sp, #84
 1793              	.LCFI41:
 1794              		.cfi_def_cfa_offset 88
 204:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1795              		.loc 1 204 3 view .LVU391
 204:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1796              		.loc 1 204 22 is_stmt 0 view .LVU392
 1797 0004 3022     		movs	r2, #48
 1798 0006 0021     		movs	r1, #0
 1799 0008 08A8     		add	r0, sp, #32
 1800 000a FFF7FEFF 		bl	memset
 1801              	.LVL108:
 205:Core/Src/main.c **** 
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 44


 1802              		.loc 1 205 3 is_stmt 1 view .LVU393
 205:Core/Src/main.c **** 
 1803              		.loc 1 205 22 is_stmt 0 view .LVU394
 1804 000e 0023     		movs	r3, #0
 1805 0010 0393     		str	r3, [sp, #12]
 1806 0012 0493     		str	r3, [sp, #16]
 1807 0014 0593     		str	r3, [sp, #20]
 1808 0016 0693     		str	r3, [sp, #24]
 1809 0018 0793     		str	r3, [sp, #28]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1810              		.loc 1 209 3 is_stmt 1 view .LVU395
 1811              	.LBB7:
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1812              		.loc 1 209 3 view .LVU396
 1813 001a 0193     		str	r3, [sp, #4]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1814              		.loc 1 209 3 view .LVU397
 1815 001c 1F4A     		ldr	r2, .L84
 1816 001e 116C     		ldr	r1, [r2, #64]
 1817 0020 41F08051 		orr	r1, r1, #268435456
 1818 0024 1164     		str	r1, [r2, #64]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1819              		.loc 1 209 3 view .LVU398
 1820 0026 126C     		ldr	r2, [r2, #64]
 1821 0028 02F08052 		and	r2, r2, #268435456
 1822 002c 0192     		str	r2, [sp, #4]
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1823              		.loc 1 209 3 view .LVU399
 1824 002e 019A     		ldr	r2, [sp, #4]
 1825              	.LBE7:
 209:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1826              		.loc 1 209 3 view .LVU400
 210:Core/Src/main.c **** 
 1827              		.loc 1 210 3 view .LVU401
 1828              	.LBB8:
 210:Core/Src/main.c **** 
 1829              		.loc 1 210 3 view .LVU402
 1830 0030 0293     		str	r3, [sp, #8]
 210:Core/Src/main.c **** 
 1831              		.loc 1 210 3 view .LVU403
 1832 0032 1B4A     		ldr	r2, .L84+4
 1833 0034 1168     		ldr	r1, [r2]
 1834 0036 41F48041 		orr	r1, r1, #16384
 1835 003a 1160     		str	r1, [r2]
 210:Core/Src/main.c **** 
 1836              		.loc 1 210 3 view .LVU404
 1837 003c 1268     		ldr	r2, [r2]
 1838 003e 02F48042 		and	r2, r2, #16384
 1839 0042 0292     		str	r2, [sp, #8]
 210:Core/Src/main.c **** 
 1840              		.loc 1 210 3 view .LVU405
 1841 0044 029A     		ldr	r2, [sp, #8]
 1842              	.LBE8:
 210:Core/Src/main.c **** 
 1843              		.loc 1 210 3 view .LVU406
 215:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1844              		.loc 1 215 3 view .LVU407
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 45


 215:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1845              		.loc 1 215 36 is_stmt 0 view .LVU408
 1846 0046 0222     		movs	r2, #2
 1847 0048 0892     		str	r2, [sp, #32]
 216:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1848              		.loc 1 216 3 is_stmt 1 view .LVU409
 216:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1849              		.loc 1 216 30 is_stmt 0 view .LVU410
 1850 004a 0121     		movs	r1, #1
 1851 004c 0B91     		str	r1, [sp, #44]
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1852              		.loc 1 217 3 is_stmt 1 view .LVU411
 217:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1853              		.loc 1 217 41 is_stmt 0 view .LVU412
 1854 004e 1021     		movs	r1, #16
 1855 0050 0C91     		str	r1, [sp, #48]
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1856              		.loc 1 218 3 is_stmt 1 view .LVU413
 218:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 1857              		.loc 1 218 34 is_stmt 0 view .LVU414
 1858 0052 0E92     		str	r2, [sp, #56]
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1859              		.loc 1 219 3 is_stmt 1 view .LVU415
 219:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 1860              		.loc 1 219 35 is_stmt 0 view .LVU416
 1861 0054 0F93     		str	r3, [sp, #60]
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 1862              		.loc 1 220 3 is_stmt 1 view .LVU417
 220:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 168;
 1863              		.loc 1 220 30 is_stmt 0 view .LVU418
 1864 0056 0823     		movs	r3, #8
 1865 0058 1093     		str	r3, [sp, #64]
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1866              		.loc 1 221 3 is_stmt 1 view .LVU419
 221:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1867              		.loc 1 221 30 is_stmt 0 view .LVU420
 1868 005a A823     		movs	r3, #168
 1869 005c 1193     		str	r3, [sp, #68]
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1870              		.loc 1 222 3 is_stmt 1 view .LVU421
 222:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1871              		.loc 1 222 30 is_stmt 0 view .LVU422
 1872 005e 1292     		str	r2, [sp, #72]
 223:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1873              		.loc 1 223 3 is_stmt 1 view .LVU423
 223:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1874              		.loc 1 223 30 is_stmt 0 view .LVU424
 1875 0060 0423     		movs	r3, #4
 1876 0062 1393     		str	r3, [sp, #76]
 224:Core/Src/main.c ****   {
 1877              		.loc 1 224 3 is_stmt 1 view .LVU425
 224:Core/Src/main.c ****   {
 1878              		.loc 1 224 7 is_stmt 0 view .LVU426
 1879 0064 08A8     		add	r0, sp, #32
 1880 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1881              	.LVL109:
 224:Core/Src/main.c ****   {
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 46


 1882              		.loc 1 224 6 view .LVU427
 1883 006a 98B9     		cbnz	r0, .L82
 231:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1884              		.loc 1 231 3 is_stmt 1 view .LVU428
 231:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1885              		.loc 1 231 31 is_stmt 0 view .LVU429
 1886 006c 0F23     		movs	r3, #15
 1887 006e 0393     		str	r3, [sp, #12]
 233:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1888              		.loc 1 233 3 is_stmt 1 view .LVU430
 233:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1889              		.loc 1 233 34 is_stmt 0 view .LVU431
 1890 0070 0223     		movs	r3, #2
 1891 0072 0493     		str	r3, [sp, #16]
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1892              		.loc 1 234 3 is_stmt 1 view .LVU432
 234:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1893              		.loc 1 234 35 is_stmt 0 view .LVU433
 1894 0074 0023     		movs	r3, #0
 1895 0076 0593     		str	r3, [sp, #20]
 235:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1896              		.loc 1 235 3 is_stmt 1 view .LVU434
 235:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1897              		.loc 1 235 36 is_stmt 0 view .LVU435
 1898 0078 4FF4A053 		mov	r3, #5120
 1899 007c 0693     		str	r3, [sp, #24]
 236:Core/Src/main.c **** 
 1900              		.loc 1 236 3 is_stmt 1 view .LVU436
 236:Core/Src/main.c **** 
 1901              		.loc 1 236 36 is_stmt 0 view .LVU437
 1902 007e 4FF48053 		mov	r3, #4096
 1903 0082 0793     		str	r3, [sp, #28]
 238:Core/Src/main.c ****   {
 1904              		.loc 1 238 3 is_stmt 1 view .LVU438
 238:Core/Src/main.c ****   {
 1905              		.loc 1 238 7 is_stmt 0 view .LVU439
 1906 0084 0521     		movs	r1, #5
 1907 0086 03A8     		add	r0, sp, #12
 1908 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1909              	.LVL110:
 238:Core/Src/main.c ****   {
 1910              		.loc 1 238 6 view .LVU440
 1911 008c 20B9     		cbnz	r0, .L83
 242:Core/Src/main.c **** 
 1912              		.loc 1 242 1 view .LVU441
 1913 008e 15B0     		add	sp, sp, #84
 1914              	.LCFI42:
 1915              		.cfi_remember_state
 1916              		.cfi_def_cfa_offset 4
 1917              		@ sp needed
 1918 0090 5DF804FB 		ldr	pc, [sp], #4
 1919              	.L82:
 1920              	.LCFI43:
 1921              		.cfi_restore_state
 226:Core/Src/main.c ****   }
 1922              		.loc 1 226 5 is_stmt 1 view .LVU442
 1923 0094 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 47


 1924              	.LVL111:
 1925              	.L83:
 240:Core/Src/main.c ****   }
 1926              		.loc 1 240 5 view .LVU443
 1927 0098 FFF7FEFF 		bl	Error_Handler
 1928              	.LVL112:
 1929              	.L85:
 1930              		.align	2
 1931              	.L84:
 1932 009c 00380240 		.word	1073887232
 1933 00a0 00700040 		.word	1073770496
 1934              		.cfi_endproc
 1935              	.LFE134:
 1937              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1938              		.align	2
 1939              	.LC5:
 1940 0000 2D2D2D2D 		.ascii	"--------------init--------------\000"
 1940      2D2D2D2D 
 1940      2D2D2D2D 
 1940      2D2D696E 
 1940      69742D2D 
 1941              		.section	.text.main,"ax",%progbits
 1942              		.align	1
 1943              		.global	main
 1944              		.syntax unified
 1945              		.thumb
 1946              		.thumb_func
 1948              	main:
 1949              	.LFB133:
  91:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1950              		.loc 1 91 1 view -0
 1951              		.cfi_startproc
 1952              		@ Volatile: function does not return.
 1953              		@ args = 0, pretend = 0, frame = 0
 1954              		@ frame_needed = 0, uses_anonymous_args = 0
 1955 0000 2DE98048 		push	{r7, fp, lr}
 1956              	.LCFI44:
 1957              		.cfi_def_cfa_offset 12
 1958              		.cfi_offset 7, -12
 1959              		.cfi_offset 11, -8
 1960              		.cfi_offset 14, -4
 1961 0004 85B0     		sub	sp, sp, #20
 1962              	.LCFI45:
 1963              		.cfi_def_cfa_offset 32
  98:Core/Src/main.c **** 
 1964              		.loc 1 98 3 view .LVU445
 1965 0006 FFF7FEFF 		bl	HAL_Init
 1966              	.LVL113:
 105:Core/Src/main.c **** 
 1967              		.loc 1 105 3 view .LVU446
 1968 000a FFF7FEFF 		bl	SystemClock_Config
 1969              	.LVL114:
 112:Core/Src/main.c ****   MX_CAN1_Init();
 1970              		.loc 1 112 3 view .LVU447
 1971 000e FFF7FEFF 		bl	MX_GPIO_Init
 1972              	.LVL115:
 113:Core/Src/main.c ****   MX_USART1_UART_Init();
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 48


 1973              		.loc 1 113 3 view .LVU448
 1974 0012 FFF7FEFF 		bl	MX_CAN1_Init
 1975              	.LVL116:
 114:Core/Src/main.c ****   MX_I2C2_Init();
 1976              		.loc 1 114 3 view .LVU449
 1977 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 1978              	.LVL117:
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1979              		.loc 1 115 3 view .LVU450
 1980 001a FFF7FEFF 		bl	MX_I2C2_Init
 1981              	.LVL118:
 118:Core/Src/main.c **** 	my_can_filter_init_recv_all(&hcan1);
 1982              		.loc 1 118 2 view .LVU451
 1983 001e 5C4C     		ldr	r4, .L89
 1984 0020 2046     		mov	r0, r4
 1985 0022 FFF7FEFF 		bl	HAL_CAN_Start
 1986              	.LVL119:
 119:Core/Src/main.c **** 	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);  // enable IT
 1987              		.loc 1 119 2 view .LVU452
 1988 0026 2046     		mov	r0, r4
 1989 0028 FFF7FEFF 		bl	my_can_filter_init_recv_all
 1990              	.LVL120:
 120:Core/Src/main.c **** 	
 1991              		.loc 1 120 2 view .LVU453
 1992 002c 0221     		movs	r1, #2
 1993 002e 2046     		mov	r0, r4
 1994 0030 FFF7FEFF 		bl	HAL_CAN_ActivateNotification
 1995              	.LVL121:
 129:Core/Src/main.c ****   motor_pid[0].f_param_init(&motor_pid[0],PID_Speed,current_limit,5000,0,0,0,8000,61.4656753,0.6697
 1996              		.loc 1 129 3 view .LVU454
 1997 0034 574E     		ldr	r6, .L89+4
 1998 0036 3046     		mov	r0, r6
 1999 0038 FFF7FEFF 		bl	pid_init
 2000              	.LVL122:
 130:Core/Src/main.c ****   pid_init(&angle_pid[0]); //位置环（相对位置）
 2001              		.loc 1 130 3 view .LVU455
 130:Core/Src/main.c ****   pid_init(&angle_pid[0]); //位置环（相对位置）
 2002              		.loc 1 130 15 is_stmt 0 view .LVU456
 2003 003c B56D     		ldr	r5, [r6, #88]
 130:Core/Src/main.c ****   pid_init(&angle_pid[0]); //位置环（相对位置）
 2004              		.loc 1 130 3 view .LVU457
 2005 003e 9FED568A 		vldr.32	s16, .L89+8
 2006 0042 4FF4FA58 		mov	r8, #8000
 2007 0046 CDF80880 		str	r8, [sp, #8]
 2008 004a 0024     		movs	r4, #0
 2009 004c 0194     		str	r4, [sp, #4]
 2010 004e 0094     		str	r4, [sp]
 2011 0050 F0EE481A 		vmov.f32	s3, s16
 2012 0054 9FED511A 		vldr.32	s2, .L89+12
 2013 0058 DFED510A 		vldr.32	s1, .L89+16
 2014 005c B0EE480A 		vmov.f32	s0, s16
 2015 0060 41F28833 		movw	r3, #5000
 2016 0064 4F4A     		ldr	r2, .L89+20
 2017 0066 1288     		ldrh	r2, [r2]
 2018 0068 0121     		movs	r1, #1
 2019 006a 3046     		mov	r0, r6
 2020 006c A847     		blx	r5
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 49


 2021              	.LVL123:
 131:Core/Src/main.c ****   angle_pid[0].f_param_init(&angle_pid[0],PID_Speed,300,300,0,0,4000,0,1.3713,0.00495369,94.8474*0)
 2022              		.loc 1 131 3 is_stmt 1 view .LVU458
 2023 006e 4E4D     		ldr	r5, .L89+24
 2024 0070 2846     		mov	r0, r5
 2025 0072 FFF7FEFF 		bl	pid_init
 2026              	.LVL124:
 132:Core/Src/main.c ****   pid_init(&abs_pid[0]); //位置环（自稳）
 2027              		.loc 1 132 3 view .LVU459
 2028 0076 0294     		str	r4, [sp, #8]
 2029 0078 4FF47A69 		mov	r9, #4000
 2030 007c CDF80490 		str	r9, [sp, #4]
 2031 0080 0094     		str	r4, [sp]
 2032 0082 F0EE481A 		vmov.f32	s3, s16
 2033 0086 9FED491A 		vldr.32	s2, .L89+28
 2034 008a DFED490A 		vldr.32	s1, .L89+32
 2035 008e B0EE480A 		vmov.f32	s0, s16
 2036 0092 4FF49673 		mov	r3, #300
 2037 0096 1A46     		mov	r2, r3
 2038 0098 0121     		movs	r1, #1
 2039 009a 2846     		mov	r0, r5
 2040 009c AF6D     		ldr	r7, [r5, #88]
 2041 009e B847     		blx	r7
 2042              	.LVL125:
 133:Core/Src/main.c ****   abs_pid[0].f_param_init(&abs_pid[0],PID_Speed,300,300,0,0,4000,0,-0.9,-0.003,-3);
 2043              		.loc 1 133 3 view .LVU460
 2044 00a0 DFF840A1 		ldr	r10, .L89+84
 2045 00a4 5046     		mov	r0, r10
 2046 00a6 FFF7FEFF 		bl	pid_init
 2047              	.LVL126:
 134:Core/Src/main.c **** 
 2048              		.loc 1 134 3 view .LVU461
 2049 00aa 0294     		str	r4, [sp, #8]
 2050 00ac CDF80490 		str	r9, [sp, #4]
 2051 00b0 0094     		str	r4, [sp]
 2052 00b2 F8EE081A 		vmov.f32	s3, #-3.0e+0
 2053 00b6 9FED3F1A 		vldr.32	s2, .L89+36
 2054 00ba DFED3F0A 		vldr.32	s1, .L89+40
 2055 00be B0EE480A 		vmov.f32	s0, s16
 2056 00c2 4FF49673 		mov	r3, #300
 2057 00c6 1A46     		mov	r2, r3
 2058 00c8 0121     		movs	r1, #1
 2059 00ca 5046     		mov	r0, r10
 2060 00cc DAF85870 		ldr	r7, [r10, #88]
 2061 00d0 B847     		blx	r7
 2062              	.LVL127:
 137:Core/Src/main.c ****   motor_pid[1].f_param_init(&motor_pid[1],PID_Speed,current_limit,5000,0,0,0,8000,4.01239768,3.0348
 2063              		.loc 1 137 3 view .LVU462
 2064 00d2 06F1640B 		add	fp, r6, #100
 2065 00d6 5846     		mov	r0, fp
 2066 00d8 FFF7FEFF 		bl	pid_init
 2067              	.LVL128:
 138:Core/Src/main.c ****   pid_init(&angle_pid[1]); //位置环（相对位置）
 2068              		.loc 1 138 3 view .LVU463
 138:Core/Src/main.c ****   pid_init(&angle_pid[1]); //位置环（相对位置）
 2069              		.loc 1 138 15 is_stmt 0 view .LVU464
 2070 00dc D6F8BC60 		ldr	r6, [r6, #188]
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 50


 138:Core/Src/main.c ****   pid_init(&angle_pid[1]); //位置环（相对位置）
 2071              		.loc 1 138 3 view .LVU465
 2072 00e0 CDF80880 		str	r8, [sp, #8]
 2073 00e4 0194     		str	r4, [sp, #4]
 2074 00e6 0094     		str	r4, [sp]
 2075 00e8 F0EE481A 		vmov.f32	s3, s16
 2076 00ec 9FED331A 		vldr.32	s2, .L89+44
 2077 00f0 DFED330A 		vldr.32	s1, .L89+48
 2078 00f4 B0EE480A 		vmov.f32	s0, s16
 2079 00f8 41F28833 		movw	r3, #5000
 2080 00fc 294A     		ldr	r2, .L89+20
 2081 00fe 1288     		ldrh	r2, [r2]
 2082 0100 0121     		movs	r1, #1
 2083 0102 5846     		mov	r0, fp
 2084 0104 B047     		blx	r6
 2085              	.LVL129:
 139:Core/Src/main.c ****   angle_pid[1].f_param_init(&angle_pid[1],PID_Speed,500,500,0,0,4000,0,1.27137,0.01084,27.877753*0.
 2086              		.loc 1 139 3 is_stmt 1 view .LVU466
 2087 0106 05F16406 		add	r6, r5, #100
 2088 010a 3046     		mov	r0, r6
 2089 010c FFF7FEFF 		bl	pid_init
 2090              	.LVL130:
 140:Core/Src/main.c ****   pid_init(&abs_pid[1]); //位置环（自稳）
 2091              		.loc 1 140 3 view .LVU467
 140:Core/Src/main.c ****   pid_init(&abs_pid[1]); //位置环（自稳）
 2092              		.loc 1 140 15 is_stmt 0 view .LVU468
 2093 0110 D5F8BC50 		ldr	r5, [r5, #188]
 140:Core/Src/main.c ****   pid_init(&abs_pid[1]); //位置环（自稳）
 2094              		.loc 1 140 3 view .LVU469
 2095 0114 0294     		str	r4, [sp, #8]
 2096 0116 CDF80490 		str	r9, [sp, #4]
 2097 011a 0094     		str	r4, [sp]
 2098 011c DFED291A 		vldr.32	s3, .L89+52
 2099 0120 9FED291A 		vldr.32	s2, .L89+56
 2100 0124 DFED290A 		vldr.32	s1, .L89+60
 2101 0128 B0EE480A 		vmov.f32	s0, s16
 2102 012c 4FF4FA73 		mov	r3, #500
 2103 0130 1A46     		mov	r2, r3
 2104 0132 0121     		movs	r1, #1
 2105 0134 3046     		mov	r0, r6
 2106 0136 A847     		blx	r5
 2107              	.LVL131:
 141:Core/Src/main.c ****   abs_pid[1].f_param_init(&abs_pid[1],PID_Speed,300,300,0,0,4000,0,0.5,0,10);
 2108              		.loc 1 141 3 is_stmt 1 view .LVU470
 2109 0138 0AF16405 		add	r5, r10, #100
 2110 013c 2846     		mov	r0, r5
 2111 013e FFF7FEFF 		bl	pid_init
 2112              	.LVL132:
 142:Core/Src/main.c **** 
 2113              		.loc 1 142 3 view .LVU471
 142:Core/Src/main.c **** 
 2114              		.loc 1 142 13 is_stmt 0 view .LVU472
 2115 0142 DAF8BC60 		ldr	r6, [r10, #188]
 142:Core/Src/main.c **** 
 2116              		.loc 1 142 3 view .LVU473
 2117 0146 0294     		str	r4, [sp, #8]
 2118 0148 CDF80490 		str	r9, [sp, #4]
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 51


 2119 014c 0094     		str	r4, [sp]
 2120 014e F2EE041A 		vmov.f32	s3, #1.0e+1
 2121 0152 B0EE481A 		vmov.f32	s2, s16
 2122 0156 F6EE000A 		vmov.f32	s1, #5.0e-1
 2123 015a B0EE480A 		vmov.f32	s0, s16
 2124 015e 4FF49673 		mov	r3, #300
 2125 0162 1A46     		mov	r2, r3
 2126 0164 0121     		movs	r1, #1
 2127 0166 2846     		mov	r0, r5
 2128 0168 B047     		blx	r6
 2129              	.LVL133:
 146:Core/Src/main.c ****   HAL_I2C_Slave_Receive_IT(&hi2c2,ReceiveBuffer,sizeof(ReceiveBuffer));
 2130              		.loc 1 146 3 is_stmt 1 view .LVU474
 2131 016a 1948     		ldr	r0, .L89+64
 2132 016c FFF7FEFF 		bl	puts
 2133              	.LVL134:
 147:Core/Src/main.c ****   while (1)
 2134              		.loc 1 147 3 view .LVU475
 2135 0170 0622     		movs	r2, #6
 2136 0172 1849     		ldr	r1, .L89+68
 2137 0174 1848     		ldr	r0, .L89+72
 2138 0176 FFF7FEFF 		bl	HAL_I2C_Slave_Receive_IT
 2139              	.LVL135:
 2140              	.L87:
 148:Core/Src/main.c ****   {
 2141              		.loc 1 148 3 view .LVU476
 154:Core/Src/main.c ****     {
 2142              		.loc 1 154 5 view .LVU477
 2143              	.LBB9:
 177:Core/Src/main.c ****       break;
 2144              		.loc 1 177 9 view .LVU478
 2145 017a FFF7FEFF 		bl	Abs_angle_control_loop
 2146              	.LVL136:
 178:Core/Src/main.c ****     
 2147              		.loc 1 178 7 view .LVU479
 2148              	.LBE9:
 187:Core/Src/main.c ****     {
 2149              		.loc 1 187 5 view .LVU480
 192:Core/Src/main.c ****     j++;
 2150              		.loc 1 192 5 view .LVU481
 192:Core/Src/main.c ****     j++;
 2151              		.loc 1 192 6 is_stmt 0 view .LVU482
 2152 017e 174A     		ldr	r2, .L89+76
 2153 0180 1368     		ldr	r3, [r2]
 2154 0182 0133     		adds	r3, r3, #1
 2155 0184 1360     		str	r3, [r2]
 193:Core/Src/main.c ****   }
 2156              		.loc 1 193 5 is_stmt 1 view .LVU483
 193:Core/Src/main.c ****   }
 2157              		.loc 1 193 6 is_stmt 0 view .LVU484
 2158 0186 164A     		ldr	r2, .L89+80
 2159 0188 1368     		ldr	r3, [r2]
 2160 018a 0133     		adds	r3, r3, #1
 2161 018c 1360     		str	r3, [r2]
 148:Core/Src/main.c ****   {
 2162              		.loc 1 148 9 is_stmt 1 view .LVU485
 2163 018e F4E7     		b	.L87
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 52


 2164              	.L90:
 2165              		.align	2
 2166              	.L89:
 2167 0190 00000000 		.word	hcan1
 2168 0194 00000000 		.word	.LANCHOR6
 2169 0198 00000000 		.word	0
 2170 019c 1B742B3F 		.word	1059812379
 2171 01a0 DADC7542 		.word	1115020506
 2172 01a4 00000000 		.word	.LANCHOR15
 2173 01a8 00000000 		.word	.LANCHOR9
 2174 01ac 9052A23B 		.word	1000493712
 2175 01b0 C286AF3F 		.word	1068467906
 2176 01b4 A69B44BB 		.word	-1153131610
 2177 01b8 666666BF 		.word	-1083808154
 2178 01bc FD3A4240 		.word	1078082301
 2179 01c0 90658040 		.word	1082156432
 2180 01c4 E96A3241 		.word	1093823209
 2181 01c8 419A313C 		.word	1009883713
 2182 01cc 41BCA23F 		.word	1067629633
 2183 01d0 00000000 		.word	.LC5
 2184 01d4 00000000 		.word	.LANCHOR0
 2185 01d8 00000000 		.word	hi2c2
 2186 01dc 00000000 		.word	.LANCHOR7
 2187 01e0 00000000 		.word	.LANCHOR10
 2188 01e4 00000000 		.word	.LANCHOR5
 2189              		.cfi_endproc
 2190              	.LFE133:
 2192              		.global	speed_set
 2193              		.global	time
 2194              		.global	speed
 2195              		.global	current
 2196              		.global	j
 2197              		.global	i
 2198              		.global	current_limit
 2199              		.global	Gimbal_angle
 2200              		.global	IMU_Angle
 2201              		.global	IMU_Angle_Raw
 2202              		.global	ABS_IMU_angle
 2203              		.global	ABS_Gimbal_angle
 2204              		.global	abs_pid
 2205              		.global	ReceiveBuffer
 2206              		.global	angle_pid
 2207              		.global	motor_pid
 2208              		.section	.bss.ABS_Gimbal_angle,"aw",%nobits
 2209              		.align	2
 2210              		.set	.LANCHOR4,. + 0
 2213              	ABS_Gimbal_angle:
 2214 0000 00000000 		.space	8
 2214      00000000 
 2215              		.section	.bss.ABS_IMU_angle,"aw",%nobits
 2216              		.align	2
 2217              		.set	.LANCHOR3,. + 0
 2220              	ABS_IMU_angle:
 2221 0000 00000000 		.space	4
 2222              		.section	.bss.IMU_Angle,"aw",%nobits
 2223              		.align	2
 2224              		.set	.LANCHOR2,. + 0
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 53


 2227              	IMU_Angle:
 2228 0000 00000000 		.space	12
 2228      00000000 
 2228      00000000 
 2229              		.section	.bss.IMU_Angle_Raw,"aw",%nobits
 2230              		.align	2
 2231              		.set	.LANCHOR1,. + 0
 2234              	IMU_Angle_Raw:
 2235 0000 00000000 		.space	6
 2235      0000
 2236              		.section	.bss.ReceiveBuffer,"aw",%nobits
 2237              		.align	2
 2238              		.set	.LANCHOR0,. + 0
 2241              	ReceiveBuffer:
 2242 0000 00000000 		.space	6
 2242      0000
 2243              		.section	.bss.abs_pid,"aw",%nobits
 2244              		.align	2
 2245              		.set	.LANCHOR5,. + 0
 2248              	abs_pid:
 2249 0000 00000000 		.space	200
 2249      00000000 
 2249      00000000 
 2249      00000000 
 2249      00000000 
 2250              		.section	.bss.angle_pid,"aw",%nobits
 2251              		.align	2
 2252              		.set	.LANCHOR9,. + 0
 2255              	angle_pid:
 2256 0000 00000000 		.space	200
 2256      00000000 
 2256      00000000 
 2256      00000000 
 2256      00000000 
 2257              		.section	.bss.current,"aw",%nobits
 2258              		.align	2
 2259              		.set	.LANCHOR14,. + 0
 2262              	current:
 2263 0000 00000000 		.space	4
 2264              		.section	.bss.i,"aw",%nobits
 2265              		.align	2
 2266              		.set	.LANCHOR7,. + 0
 2269              	i:
 2270 0000 00000000 		.space	4
 2271              		.section	.bss.j,"aw",%nobits
 2272              		.align	2
 2273              		.set	.LANCHOR10,. + 0
 2276              	j:
 2277 0000 00000000 		.space	4
 2278              		.section	.bss.motor_pid,"aw",%nobits
 2279              		.align	2
 2280              		.set	.LANCHOR6,. + 0
 2283              	motor_pid:
 2284 0000 00000000 		.space	400
 2284      00000000 
 2284      00000000 
 2284      00000000 
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 54


 2284      00000000 
 2285              		.section	.bss.speed,"aw",%nobits
 2286              		.align	2
 2287              		.set	.LANCHOR12,. + 0
 2290              	speed:
 2291 0000 00000000 		.space	4
 2292              		.section	.bss.speed_set,"aw",%nobits
 2293              		.align	2
 2294              		.set	.LANCHOR11,. + 0
 2297              	speed_set:
 2298 0000 00000000 		.space	4
 2299              		.section	.bss.time,"aw",%nobits
 2300              		.align	2
 2301              		.set	.LANCHOR13,. + 0
 2304              	time:
 2305 0000 00000000 		.space	4
 2306              		.section	.data.Gimbal_angle,"aw"
 2307              		.align	2
 2308              		.set	.LANCHOR8,. + 0
 2311              	Gimbal_angle:
 2312 0000 4C1D     		.short	7500
 2313 0002 C012     		.short	4800
 2314              		.section	.data.current_limit,"aw"
 2315              		.align	2
 2316              		.set	.LANCHOR15,. + 0
 2319              	current_limit:
 2320 0000 D0070000 		.word	2000
 2321              		.text
 2322              	.Letext0:
 2323              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 2324              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 2325              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 2326              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 2327              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 2328              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 2329              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 2330              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 2331              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 2332              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 2333              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 2334              		.file 14 "Core/Inc/can.h"
 2335              		.file 15 "Core/Inc/i2c.h"
 2336              		.file 16 "Core/Inc/usart.h"
 2337              		.file 17 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\lib\\gcc\\arm-none-eabi
 2338              		.file 18 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 2339              		.file 19 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 2340              		.file 20 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 2341              		.file 21 "Core/Inc/mytype.h"
 2342              		.file 22 "Core/Inc/bsp_can.h"
 2343              		.file 23 "Core/Inc/pid.h"
 2344              		.file 24 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 2345              		.file 25 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 2346              		.file 26 "Core/Inc/gpio.h"
 2347              		.file 27 "<built-in>"
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 55


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:20     .text.fputc:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:26     .text.fputc:00000000 fputc
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:65     .text.fputc:0000001c $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:70     .text.fgetc:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:76     .text.fgetc:00000000 fgetc
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:115    .text.fgetc:00000024 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:121    .rodata.HAL_I2C_SlaveRxCpltCallback.str1.4:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:125    .text.HAL_I2C_SlaveRxCpltCallback:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:131    .text.HAL_I2C_SlaveRxCpltCallback:00000000 HAL_I2C_SlaveRxCpltCallback
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:284    .text.HAL_I2C_SlaveRxCpltCallback:000000d4 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:298    .rodata.Abs_angle_control_loop.str1.4:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:302    .text.Abs_angle_control_loop:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:308    .text.Abs_angle_control_loop:00000000 Abs_angle_control_loop
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:477    .text.Abs_angle_control_loop:00000104 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:494    .rodata.Rel_angle_control_loop.str1.4:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:498    .text.Rel_angle_control_loop:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:504    .text.Rel_angle_control_loop:00000000 Rel_angle_control_loop
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:713    .text.Rel_angle_control_loop:00000138 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:729    .text.Abs_angle_PID_test_loop:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:735    .text.Abs_angle_PID_test_loop:00000000 Abs_angle_PID_test_loop
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:913    .text.Abs_angle_PID_test_loop:00000100 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:929    .rodata.Rel_angle_PID_test_loop.str1.4:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:936    .text.Rel_angle_PID_test_loop:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:942    .text.Rel_angle_PID_test_loop:00000000 Rel_angle_PID_test_loop
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1137   .text.Rel_angle_PID_test_loop:00000130 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1151   .text.speed_loop_PID_tuning:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1157   .text.speed_loop_PID_tuning:00000000 speed_loop_PID_tuning
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1289   .text.speed_loop_PID_tuning:000000a0 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1302   .text.Rel_angleloop_PID_tuning:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1308   .text.Rel_angleloop_PID_tuning:00000000 Rel_angleloop_PID_tuning
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1486   .text.Rel_angleloop_PID_tuning:000000fc $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1498   .text.Abs_anglelop_PID_tuning:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1504   .text.Abs_anglelop_PID_tuning:00000000 Abs_anglelop_PID_tuning
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1719   .text.Abs_anglelop_PID_tuning:0000013c $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1738   .text.Error_Handler:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1744   .text.Error_Handler:00000000 Error_Handler
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1776   .text.SystemClock_Config:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1782   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1932   .text.SystemClock_Config:0000009c $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1938   .rodata.main.str1.4:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1942   .text.main:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:1948   .text.main:00000000 main
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2167   .text.main:00000190 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2297   .bss.speed_set:00000000 speed_set
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2304   .bss.time:00000000 time
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2290   .bss.speed:00000000 speed
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2262   .bss.current:00000000 current
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2276   .bss.j:00000000 j
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2269   .bss.i:00000000 i
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2319   .data.current_limit:00000000 current_limit
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2311   .data.Gimbal_angle:00000000 Gimbal_angle
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2227   .bss.IMU_Angle:00000000 IMU_Angle
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2234   .bss.IMU_Angle_Raw:00000000 IMU_Angle_Raw
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2220   .bss.ABS_IMU_angle:00000000 ABS_IMU_angle
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2213   .bss.ABS_Gimbal_angle:00000000 ABS_Gimbal_angle
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s 			page 56


C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2248   .bss.abs_pid:00000000 abs_pid
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2241   .bss.ReceiveBuffer:00000000 ReceiveBuffer
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2255   .bss.angle_pid:00000000 angle_pid
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2283   .bss.motor_pid:00000000 motor_pid
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2209   .bss.ABS_Gimbal_angle:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2216   .bss.ABS_IMU_angle:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2223   .bss.IMU_Angle:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2230   .bss.IMU_Angle_Raw:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2237   .bss.ReceiveBuffer:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2244   .bss.abs_pid:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2251   .bss.angle_pid:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2258   .bss.current:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2265   .bss.i:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2272   .bss.j:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2279   .bss.motor_pid:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2286   .bss.speed:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2293   .bss.speed_set:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2300   .bss.time:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2307   .data.Gimbal_angle:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\ccr8KsiQ.s:2315   .data.current_limit:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
HAL_UART_Receive
__aeabi_f2d
printf
HAL_I2C_Slave_Receive_IT
hi2c2
__aeabi_dadd
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2iz
set_moto_current
HAL_Delay
moto_chassis
hcan1
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_CAN1_Init
MX_USART1_UART_Init
MX_I2C2_Init
HAL_CAN_Start
my_can_filter_init_recv_all
HAL_CAN_ActivateNotification
pid_init
puts
