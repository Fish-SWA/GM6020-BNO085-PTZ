ARM GAS  C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"bsp_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.my_can_filter_init_recv_all,"ax",%progbits
  20              		.align	1
  21              		.global	my_can_filter_init_recv_all
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	my_can_filter_init_recv_all:
  27              	.LVL0:
  28              	.LFB130:
  29              		.file 1 "Core/Src/bsp_can.c"
   1:Core/Src/bsp_can.c **** /******************************************************************************
   2:Core/Src/bsp_can.c **** /// @brief
   3:Core/Src/bsp_can.c **** /// @copyright Copyright (c) 2017 <dji-innovations, Corp. RM Dept.>
   4:Core/Src/bsp_can.c **** /// @license MIT License
   5:Core/Src/bsp_can.c **** /// Permission is hereby granted, free of charge, to any person obtaining a copy
   6:Core/Src/bsp_can.c **** /// of this software and associated documentation files (the "Software"), to deal
   7:Core/Src/bsp_can.c **** /// in the Software without restriction,including without limitation the rights
   8:Core/Src/bsp_can.c **** /// to use, copy, modify, merge, publish, distribute, sublicense,and/or sell
   9:Core/Src/bsp_can.c **** /// copies of the Software, and to permit persons to whom the Software is furnished
  10:Core/Src/bsp_can.c **** /// to do so,subject to the following conditions:
  11:Core/Src/bsp_can.c **** ///
  12:Core/Src/bsp_can.c **** /// The above copyright notice and this permission notice shall be included in
  13:Core/Src/bsp_can.c **** /// all copies or substantial portions of the Software.
  14:Core/Src/bsp_can.c **** ///
  15:Core/Src/bsp_can.c **** /// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Core/Src/bsp_can.c **** /// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:Core/Src/bsp_can.c **** /// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
  18:Core/Src/bsp_can.c **** /// THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:Core/Src/bsp_can.c **** /// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:Core/Src/bsp_can.c **** /// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:Core/Src/bsp_can.c **** /// THE SOFTWARE.
  22:Core/Src/bsp_can.c **** *******************************************************************************/
  23:Core/Src/bsp_can.c **** 
  24:Core/Src/bsp_can.c **** #include "can.h"
  25:Core/Src/bsp_can.c **** #include "bsp_can.h"
  26:Core/Src/bsp_can.c **** 
  27:Core/Src/bsp_can.c **** // list of 4, store the information (in structure 'moto_measure_t') of 4 motors respectively
  28:Core/Src/bsp_can.c **** moto_measure_t moto_chassis[4] = {0};
  29:Core/Src/bsp_can.c **** 
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s 			page 2


  30:Core/Src/bsp_can.c **** 
  31:Core/Src/bsp_can.c **** /*******************************************************************************************
  32:Core/Src/bsp_can.c ****   * @Func		my_can_filter_init
  33:Core/Src/bsp_can.c ****   * @Brief    CAN1ÂíåCAN2Êª§Ê≥¢Âô®ÈÖçÁΩÆ
  34:Core/Src/bsp_can.c ****   * @Param		CAN_HandleTypeDef* hcan
  35:Core/Src/bsp_can.c ****   * @Retval		None
  36:Core/Src/bsp_can.c ****   * @Date     2015/11/30
  37:Core/Src/bsp_can.c ****  *******************************************************************************************/
  38:Core/Src/bsp_can.c **** void my_can_filter_init_recv_all(CAN_HandleTypeDef* _hcan)
  39:Core/Src/bsp_can.c **** {
  30              		.loc 1 39 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 40
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 39 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 14, -4
  39 0002 8BB0     		sub	sp, sp, #44
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 48
  40:Core/Src/bsp_can.c **** 	//can1 &can2 use same filter config
  41:Core/Src/bsp_can.c **** 	CAN_FilterTypeDef		CAN_FilterConfigStructure;
  42              		.loc 1 41 2 is_stmt 1 view .LVU2
  42:Core/Src/bsp_can.c **** 
  43:Core/Src/bsp_can.c **** //	CAN_FilterConfigStructure.FilterNumber = 0;
  44:Core/Src/bsp_can.c **** 	CAN_FilterConfigStructure.FilterMode = CAN_FILTERMODE_IDMASK;
  43              		.loc 1 44 2 view .LVU3
  44              		.loc 1 44 39 is_stmt 0 view .LVU4
  45 0004 0023     		movs	r3, #0
  46 0006 0693     		str	r3, [sp, #24]
  45:Core/Src/bsp_can.c **** 	CAN_FilterConfigStructure.FilterScale = CAN_FILTERSCALE_32BIT;
  47              		.loc 1 45 2 is_stmt 1 view .LVU5
  48              		.loc 1 45 40 is_stmt 0 view .LVU6
  49 0008 0122     		movs	r2, #1
  50 000a 0792     		str	r2, [sp, #28]
  46:Core/Src/bsp_can.c **** 	CAN_FilterConfigStructure.FilterIdHigh = 0x0000;
  51              		.loc 1 46 2 is_stmt 1 view .LVU7
  52              		.loc 1 46 41 is_stmt 0 view .LVU8
  53 000c 0093     		str	r3, [sp]
  47:Core/Src/bsp_can.c **** 	CAN_FilterConfigStructure.FilterIdLow = 0x0000;
  54              		.loc 1 47 2 is_stmt 1 view .LVU9
  55              		.loc 1 47 40 is_stmt 0 view .LVU10
  56 000e 0193     		str	r3, [sp, #4]
  48:Core/Src/bsp_can.c **** 	CAN_FilterConfigStructure.FilterMaskIdHigh = 0x0000;
  57              		.loc 1 48 2 is_stmt 1 view .LVU11
  58              		.loc 1 48 45 is_stmt 0 view .LVU12
  59 0010 0293     		str	r3, [sp, #8]
  49:Core/Src/bsp_can.c **** 	CAN_FilterConfigStructure.FilterMaskIdLow = 0x0000;
  60              		.loc 1 49 2 is_stmt 1 view .LVU13
  61              		.loc 1 49 44 is_stmt 0 view .LVU14
  62 0012 0393     		str	r3, [sp, #12]
  50:Core/Src/bsp_can.c **** 	CAN_FilterConfigStructure.FilterFIFOAssignment = CAN_FilterFIFO0;
  63              		.loc 1 50 2 is_stmt 1 view .LVU15
  64              		.loc 1 50 49 is_stmt 0 view .LVU16
  65 0014 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s 			page 3


  51:Core/Src/bsp_can.c **** 	CAN_FilterConfigStructure.FilterBank = 14;//can1(0-13)Âíåcan2(14-27)ÂàÜÂà´ÂæóÂà∞‰∏ÄÂçäÁöÑfilter
  66              		.loc 1 51 2 is_stmt 1 view .LVU17
  67              		.loc 1 51 39 is_stmt 0 view .LVU18
  68 0016 0E23     		movs	r3, #14
  69 0018 0593     		str	r3, [sp, #20]
  52:Core/Src/bsp_can.c **** 	CAN_FilterConfigStructure.FilterActivation = ENABLE;
  70              		.loc 1 52 2 is_stmt 1 view .LVU19
  71              		.loc 1 52 45 is_stmt 0 view .LVU20
  72 001a 0892     		str	r2, [sp, #32]
  53:Core/Src/bsp_can.c **** 
  54:Core/Src/bsp_can.c **** 	if(HAL_CAN_ConfigFilter(_hcan, &CAN_FilterConfigStructure) != HAL_OK)
  73              		.loc 1 54 2 is_stmt 1 view .LVU21
  74              		.loc 1 54 5 is_stmt 0 view .LVU22
  75 001c 6946     		mov	r1, sp
  76 001e FFF7FEFF 		bl	HAL_CAN_ConfigFilter
  77              	.LVL1:
  55:Core/Src/bsp_can.c **** 	{
  56:Core/Src/bsp_can.c **** //		while(1); //show error!
  57:Core/Src/bsp_can.c **** 	}
  78              		.loc 1 57 2 is_stmt 1 view .LVU23
  58:Core/Src/bsp_can.c **** }
  79              		.loc 1 58 1 is_stmt 0 view .LVU24
  80 0022 0BB0     		add	sp, sp, #44
  81              	.LCFI2:
  82              		.cfi_def_cfa_offset 4
  83              		@ sp needed
  84 0024 5DF804FB 		ldr	pc, [sp], #4
  85              		.cfi_endproc
  86              	.LFE130:
  88              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
  89              		.align	1
  90              		.global	HAL_CAN_RxFifo0MsgPendingCallback
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	HAL_CAN_RxFifo0MsgPendingCallback:
  96              	.LVL2:
  97              	.LFB131:
  59:Core/Src/bsp_can.c **** 
  60:Core/Src/bsp_can.c **** uint32_t FlashTimer;
  61:Core/Src/bsp_can.c **** /*******************************************************************************************
  62:Core/Src/bsp_can.c ****   * @Func			void HAL_CAN_RxCpltCallback(CAN_HandleTypeDef* _hcan)
  63:Core/Src/bsp_can.c ****   * @Brief    HALÂ∫ì‰∏≠Ê†áÂáÜÁöÑCANÊé•Êî∂ÂÆåÊàêÂõûË∞ÉÂáΩÊï∞ÔºåÈúÄË¶ÅÂú®Ê≠§Â§ÑÁêÜÈÄöËøáCANÊÄªÁ∫øÊé•Ê
  64:Core/Src/bsp_can.c ****   * @Param		
  65:Core/Src/bsp_can.c ****   * @Retval		None 
  66:Core/Src/bsp_can.c ****   * @Date     2015/11/24
  67:Core/Src/bsp_can.c ****  *******************************************************************************************/
  68:Core/Src/bsp_can.c **** void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef* hcan)
  69:Core/Src/bsp_can.c **** {
  98              		.loc 1 69 1 is_stmt 1 view -0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 40
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		.loc 1 69 1 is_stmt 0 view .LVU26
 103 0000 70B5     		push	{r4, r5, r6, lr}
 104              	.LCFI3:
 105              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s 			page 4


 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 6, -8
 109              		.cfi_offset 14, -4
 110 0002 8AB0     		sub	sp, sp, #40
 111              	.LCFI4:
 112              		.cfi_def_cfa_offset 56
 113 0004 0546     		mov	r5, r0
 114 0006 0024     		movs	r4, #0
  70:Core/Src/bsp_can.c **** 	CAN_RxHeaderTypeDef		Rx1Message;
 115              		.loc 1 70 2 is_stmt 1 view .LVU27
  71:Core/Src/bsp_can.c **** 	uint8_t Data[8];
 116              		.loc 1 71 2 view .LVU28
  72:Core/Src/bsp_can.c **** 	uint8_t MotorID;
 117              		.loc 1 72 2 view .LVU29
  73:Core/Src/bsp_can.c **** 	
  74:Core/Src/bsp_can.c **** 	Rx1Message.StdId = 0x201;  // 0x200 + CANID    0x200?
 118              		.loc 1 74 2 view .LVU30
 119              		.loc 1 74 19 is_stmt 0 view .LVU31
 120 0008 40F20123 		movw	r3, #513
 121 000c 0393     		str	r3, [sp, #12]
  75:Core/Src/bsp_can.c **** 	Rx1Message.ExtId = 0;  // CAN_ID_STD, ExtId is invalid
 122              		.loc 1 75 2 is_stmt 1 view .LVU32
 123              		.loc 1 75 19 is_stmt 0 view .LVU33
 124 000e 0494     		str	r4, [sp, #16]
  76:Core/Src/bsp_can.c **** 	Rx1Message.IDE = CAN_ID_STD;
 125              		.loc 1 76 2 is_stmt 1 view .LVU34
 126              		.loc 1 76 17 is_stmt 0 view .LVU35
 127 0010 0594     		str	r4, [sp, #20]
  77:Core/Src/bsp_can.c **** 	Rx1Message.RTR = CAN_RTR_DATA;
 128              		.loc 1 77 2 is_stmt 1 view .LVU36
 129              		.loc 1 77 17 is_stmt 0 view .LVU37
 130 0012 0694     		str	r4, [sp, #24]
  78:Core/Src/bsp_can.c **** 	Rx1Message.DLC = 0x08;
 131              		.loc 1 78 2 is_stmt 1 view .LVU38
 132              		.loc 1 78 17 is_stmt 0 view .LVU39
 133 0014 0823     		movs	r3, #8
 134 0016 0793     		str	r3, [sp, #28]
  79:Core/Src/bsp_can.c **** 	
  80:Core/Src/bsp_can.c **** 	if(HAL_GetTick() - FlashTimer>500)
 135              		.loc 1 80 2 is_stmt 1 view .LVU40
 136              		.loc 1 80 5 is_stmt 0 view .LVU41
 137 0018 FFF7FEFF 		bl	HAL_GetTick
 138              	.LVL3:
 139              		.loc 1 80 19 view .LVU42
 140 001c 434B     		ldr	r3, .L16
 141 001e 1B68     		ldr	r3, [r3]
 142 0020 C01A     		subs	r0, r0, r3
 143              		.loc 1 80 4 view .LVU43
 144 0022 B0F5FA7F 		cmp	r0, #500
 145 0026 0ED8     		bhi	.L15
 146              	.L4:
  81:Core/Src/bsp_can.c **** 	{
  82:Core/Src/bsp_can.c **** 		HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
  83:Core/Src/bsp_can.c **** 		FlashTimer = HAL_GetTick();
  84:Core/Src/bsp_can.c **** 	}
  85:Core/Src/bsp_can.c **** 
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s 			page 5


  86:Core/Src/bsp_can.c **** 	HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &Rx1Message, Data);
 147              		.loc 1 86 2 is_stmt 1 view .LVU44
 148 0028 01AB     		add	r3, sp, #4
 149 002a 03AA     		add	r2, sp, #12
 150 002c 0021     		movs	r1, #0
 151 002e 2846     		mov	r0, r5
 152 0030 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 153              	.LVL4:
  87:Core/Src/bsp_can.c **** 	
  88:Core/Src/bsp_can.c **** 	switch(Rx1Message.StdId)
 154              		.loc 1 88 2 view .LVU45
 155              		.loc 1 88 19 is_stmt 0 view .LVU46
 156 0034 039B     		ldr	r3, [sp, #12]
 157              		.loc 1 88 2 view .LVU47
 158 0036 A3F20523 		subw	r3, r3, #517
 159 003a 032B     		cmp	r3, #3
 160 003c 14D8     		bhi	.L10
 161 003e DFE803F0 		tbb	[pc, r3]
 162              	.L7:
 163 0042 12       		.byte	(.L13-.L7)/2
 164 0043 0C       		.byte	(.L9-.L7)/2
 165 0044 0E       		.byte	(.L8-.L7)/2
 166 0045 10       		.byte	(.L6-.L7)/2
 167              		.p2align 1
 168              	.L15:
  82:Core/Src/bsp_can.c **** 		FlashTimer = HAL_GetTick();
 169              		.loc 1 82 3 is_stmt 1 view .LVU48
 170 0046 4FF48061 		mov	r1, #1024
 171 004a 3948     		ldr	r0, .L16+4
 172 004c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 173              	.LVL5:
  83:Core/Src/bsp_can.c **** 	}
 174              		.loc 1 83 3 view .LVU49
  83:Core/Src/bsp_can.c **** 	}
 175              		.loc 1 83 16 is_stmt 0 view .LVU50
 176 0050 FFF7FEFF 		bl	HAL_GetTick
 177              	.LVL6:
  83:Core/Src/bsp_can.c **** 	}
 178              		.loc 1 83 14 view .LVU51
 179 0054 354B     		ldr	r3, .L16
 180 0056 1860     		str	r0, [r3]
 181 0058 E6E7     		b	.L4
 182              	.L9:
  89:Core/Src/bsp_can.c **** 	{
  90:Core/Src/bsp_can.c **** 		case CAN_2006Moto1_ID: MotorID=0; break;
  91:Core/Src/bsp_can.c **** 		case CAN_2006Moto2_ID: MotorID=1; break;
 183              		.loc 1 91 26 is_stmt 1 view .LVU52
 184              	.LVL7:
 185              		.loc 1 91 37 view .LVU53
 186              		.loc 1 91 33 is_stmt 0 view .LVU54
 187 005a 0124     		movs	r4, #1
 188              		.loc 1 91 3 view .LVU55
 189 005c 04E0     		b	.L10
 190              	.LVL8:
 191              	.L8:
  92:Core/Src/bsp_can.c **** 		case CAN_2006Moto3_ID: MotorID=2; break;
 192              		.loc 1 92 26 is_stmt 1 view .LVU56
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s 			page 6


 193              		.loc 1 92 37 view .LVU57
 194              		.loc 1 92 33 is_stmt 0 view .LVU58
 195 005e 0224     		movs	r4, #2
 196              		.loc 1 92 3 view .LVU59
 197 0060 02E0     		b	.L10
 198              	.LVL9:
 199              	.L6:
  93:Core/Src/bsp_can.c **** 		case CAN_2006Moto4_ID: MotorID=3; break;
 200              		.loc 1 93 26 is_stmt 1 view .LVU60
 201              		.loc 1 93 37 view .LVU61
 202              		.loc 1 93 33 is_stmt 0 view .LVU62
 203 0062 0324     		movs	r4, #3
 204              		.loc 1 93 3 view .LVU63
 205 0064 00E0     		b	.L10
 206              	.LVL10:
 207              	.L13:
  90:Core/Src/bsp_can.c **** 		case CAN_2006Moto2_ID: MotorID=1; break;
 208              		.loc 1 90 33 view .LVU64
 209 0066 0024     		movs	r4, #0
 210              	.L10:
 211              	.LVL11:
  94:Core/Src/bsp_can.c **** 	}
  95:Core/Src/bsp_can.c **** 		
  96:Core/Src/bsp_can.c **** 	
  97:Core/Src/bsp_can.c **** //	get_moto_measure(&moto_chassis[MotorID], Data);
  98:Core/Src/bsp_can.c **** 	/* get_moto_measure (1 motor) */
  99:Core/Src/bsp_can.c **** 	moto_chassis[MotorID].last_angle = moto_chassis[MotorID].angle;
 212              		.loc 1 99 2 is_stmt 1 view .LVU65
 213              		.loc 1 99 58 is_stmt 0 view .LVU66
 214 0068 2046     		mov	r0, r4
 215 006a 324D     		ldr	r5, .L16+8
 216              	.LVL12:
 217              		.loc 1 99 58 view .LVU67
 218 006c 04EB4401 		add	r1, r4, r4, lsl #1
 219 0070 4FEA011E 		lsl	lr, r1, #4
 220 0074 05EB0111 		add	r1, r5, r1, lsl #4
 221 0078 B1F80CC0 		ldrh	ip, [r1, #12]
 222              		.loc 1 99 35 view .LVU68
 223 007c A1F80EC0 		strh	ip, [r1, #14]	@ movhi
 100:Core/Src/bsp_can.c **** 	moto_chassis[MotorID].angle = (uint16_t)(Data[0]<<8 | Data[1]) ;
 224              		.loc 1 100 2 is_stmt 1 view .LVU69
 225              		.loc 1 100 47 is_stmt 0 view .LVU70
 226 0080 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 227              		.loc 1 100 60 view .LVU71
 228 0084 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 229              		.loc 1 100 32 view .LVU72
 230 0088 43EA0223 		orr	r3, r3, r2, lsl #8
 231              		.loc 1 100 30 view .LVU73
 232 008c 8B81     		strh	r3, [r1, #12]	@ movhi
 101:Core/Src/bsp_can.c **** 	moto_chassis[MotorID].speed_rpm  = (int16_t)(Data[2]<<8 | Data[3]);
 233              		.loc 1 101 2 is_stmt 1 view .LVU74
 234              		.loc 1 101 51 is_stmt 0 view .LVU75
 235 008e 9DF80660 		ldrb	r6, [sp, #6]	@ zero_extendqisi2
 236              		.loc 1 101 64 view .LVU76
 237 0092 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
 238              		.loc 1 101 37 view .LVU77
 239 0096 42EA0622 		orr	r2, r2, r6, lsl #8
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s 			page 7


 240              		.loc 1 101 35 view .LVU78
 241 009a 25F80E20 		strh	r2, [r5, lr]	@ movhi
 102:Core/Src/bsp_can.c **** 	moto_chassis[MotorID].real_current = (Data[4]<<8 | Data[5])*5.f/16384.f;
 242              		.loc 1 102 2 is_stmt 1 view .LVU79
 243              		.loc 1 102 44 is_stmt 0 view .LVU80
 244 009e 9DF80850 		ldrb	r5, [sp, #8]	@ zero_extendqisi2
 245              		.loc 1 102 57 view .LVU81
 246 00a2 9DF80920 		ldrb	r2, [sp, #9]	@ zero_extendqisi2
 247              		.loc 1 102 51 view .LVU82
 248 00a6 42EA0522 		orr	r2, r2, r5, lsl #8
 249 00aa 07EE902A 		vmov	s15, r2	@ int
 250              		.loc 1 102 61 view .LVU83
 251 00ae F8EEE77A 		vcvt.f32.s32	s15, s15
 252 00b2 B1EE047A 		vmov.f32	s14, #5.0e+0
 253 00b6 67EE877A 		vmul.f32	s15, s15, s14
 254              		.loc 1 102 65 view .LVU84
 255 00ba 9FED1F7A 		vldr.32	s14, .L16+12
 256 00be 67EE877A 		vmul.f32	s15, s15, s14
 257              		.loc 1 102 37 view .LVU85
 258 00c2 C1ED017A 		vstr.32	s15, [r1, #4]
 103:Core/Src/bsp_can.c **** 	moto_chassis[MotorID].hall = Data[6];
 259              		.loc 1 103 2 is_stmt 1 view .LVU86
 260              		.loc 1 103 35 is_stmt 0 view .LVU87
 261 00c6 9DF80A20 		ldrb	r2, [sp, #10]	@ zero_extendqisi2
 262              		.loc 1 103 29 view .LVU88
 263 00ca 8A72     		strb	r2, [r1, #10]
 104:Core/Src/bsp_can.c **** 	if(moto_chassis[MotorID].angle - moto_chassis[MotorID].last_angle > 4096)
 264              		.loc 1 104 2 is_stmt 1 view .LVU89
 265              		.loc 1 104 33 is_stmt 0 view .LVU90
 266 00cc A3EB0C0C 		sub	ip, r3, ip
 267              		.loc 1 104 4 view .LVU91
 268 00d0 BCF5805F 		cmp	ip, #4096
 269 00d4 1EDD     		ble	.L11
 105:Core/Src/bsp_can.c **** 		moto_chassis[MotorID].round_cnt --;
 270              		.loc 1 105 3 is_stmt 1 view .LVU92
 271              		.loc 1 105 24 is_stmt 0 view .LVU93
 272 00d6 04EB4402 		add	r2, r4, r4, lsl #1
 273 00da 1649     		ldr	r1, .L16+8
 274 00dc 01EB0212 		add	r2, r1, r2, lsl #4
 275 00e0 5169     		ldr	r1, [r2, #20]
 276              		.loc 1 105 35 view .LVU94
 277 00e2 0139     		subs	r1, r1, #1
 278 00e4 5161     		str	r1, [r2, #20]
 279              	.L12:
 106:Core/Src/bsp_can.c **** 	else if (moto_chassis[MotorID].angle - moto_chassis[MotorID].last_angle < -4096)
 107:Core/Src/bsp_can.c **** 		moto_chassis[MotorID].round_cnt ++;
 108:Core/Src/bsp_can.c **** 	moto_chassis[MotorID].total_angle = moto_chassis[MotorID].round_cnt * 8192 + moto_chassis[MotorID]
 280              		.loc 1 108 2 is_stmt 1 view .LVU95
 281              		.loc 1 108 59 is_stmt 0 view .LVU96
 282 00e6 134A     		ldr	r2, .L16+8
 283 00e8 00EB4001 		add	r1, r0, r0, lsl #1
 284 00ec 02EB0111 		add	r1, r2, r1, lsl #4
 285 00f0 4C69     		ldr	r4, [r1, #20]
 286              	.LVL13:
 287              		.loc 1 108 77 view .LVU97
 288 00f2 03EB4433 		add	r3, r3, r4, lsl #13
 289              		.loc 1 108 130 view .LVU98
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s 			page 8


 290 00f6 098A     		ldrh	r1, [r1, #16]
 291              		.loc 1 108 107 view .LVU99
 292 00f8 5B1A     		subs	r3, r3, r1
 293              		.loc 1 108 36 view .LVU100
 294 00fa 00EB4000 		add	r0, r0, r0, lsl #1
 295 00fe 02EB0010 		add	r0, r2, r0, lsl #4
 296 0102 8361     		str	r3, [r0, #24]
 109:Core/Src/bsp_can.c **** 	
 110:Core/Src/bsp_can.c **** 	
 111:Core/Src/bsp_can.c **** 	/*#### add enable can it again to solve can receive only one ID problem!!!####**/
 112:Core/Src/bsp_can.c **** 	__HAL_CAN_ENABLE_IT(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 297              		.loc 1 112 2 is_stmt 1 view .LVU101
 298 0104 0D4B     		ldr	r3, .L16+16
 299 0106 1A68     		ldr	r2, [r3]
 300 0108 5369     		ldr	r3, [r2, #20]
 301 010a 43F00203 		orr	r3, r3, #2
 302 010e 5361     		str	r3, [r2, #20]
 113:Core/Src/bsp_can.c **** 
 114:Core/Src/bsp_can.c **** 
 115:Core/Src/bsp_can.c **** }
 303              		.loc 1 115 1 is_stmt 0 view .LVU102
 304 0110 0AB0     		add	sp, sp, #40
 305              	.LCFI5:
 306              		.cfi_remember_state
 307              		.cfi_def_cfa_offset 16
 308              		@ sp needed
 309 0112 70BD     		pop	{r4, r5, r6, pc}
 310              	.LVL14:
 311              	.L11:
 312              	.LCFI6:
 313              		.cfi_restore_state
 106:Core/Src/bsp_can.c **** 		moto_chassis[MotorID].round_cnt ++;
 314              		.loc 1 106 7 is_stmt 1 view .LVU103
 106:Core/Src/bsp_can.c **** 		moto_chassis[MotorID].round_cnt ++;
 315              		.loc 1 106 10 is_stmt 0 view .LVU104
 316 0114 1CF5805F 		cmn	ip, #4096
 317 0118 E5DA     		bge	.L12
 107:Core/Src/bsp_can.c **** 	moto_chassis[MotorID].total_angle = moto_chassis[MotorID].round_cnt * 8192 + moto_chassis[MotorID]
 318              		.loc 1 107 3 is_stmt 1 view .LVU105
 107:Core/Src/bsp_can.c **** 	moto_chassis[MotorID].total_angle = moto_chassis[MotorID].round_cnt * 8192 + moto_chassis[MotorID]
 319              		.loc 1 107 24 is_stmt 0 view .LVU106
 320 011a 04EB4402 		add	r2, r4, r4, lsl #1
 321 011e 0549     		ldr	r1, .L16+8
 322 0120 01EB0212 		add	r2, r1, r2, lsl #4
 323 0124 5169     		ldr	r1, [r2, #20]
 107:Core/Src/bsp_can.c **** 	moto_chassis[MotorID].total_angle = moto_chassis[MotorID].round_cnt * 8192 + moto_chassis[MotorID]
 324              		.loc 1 107 35 view .LVU107
 325 0126 0131     		adds	r1, r1, #1
 326 0128 5161     		str	r1, [r2, #20]
 327 012a DCE7     		b	.L12
 328              	.L17:
 329              		.align	2
 330              	.L16:
 331 012c 00000000 		.word	.LANCHOR0
 332 0130 001C0240 		.word	1073880064
 333 0134 00000000 		.word	.LANCHOR1
 334 0138 00008038 		.word	947912704
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s 			page 9


 335 013c 00000000 		.word	hcan1
 336              		.cfi_endproc
 337              	.LFE131:
 339              		.section	.text.set_moto_current,"ax",%progbits
 340              		.align	1
 341              		.global	set_moto_current
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 346              	set_moto_current:
 347              	.LVL15:
 348              	.LFB132:
 116:Core/Src/bsp_can.c **** 
 117:Core/Src/bsp_can.c **** /*******************************************************************************************
 118:Core/Src/bsp_can.c ****   * @Func			void get_moto_measure(moto_measure_t *ptr, CAN_HandleTypeDef* hcan)
 119:Core/Src/bsp_can.c ****   * @Brief    Êé•Êî∂3508ÁîµÊú∫ÈÄöËøáCANÂèëËøáÊù•ÁöÑ‰ø°ÊÅØ
 120:Core/Src/bsp_can.c ****   * @Param		
 121:Core/Src/bsp_can.c ****   * @Retval		None
 122:Core/Src/bsp_can.c ****   * @Date     2015/11/24
 123:Core/Src/bsp_can.c ****  *******************************************************************************************/
 124:Core/Src/bsp_can.c **** //void get_moto_measure(moto_measure_t *ptr, uint8_t Data[])
 125:Core/Src/bsp_can.c **** //{
 126:Core/Src/bsp_can.c **** //	ptr->last_angle = ptr->angle;
 127:Core/Src/bsp_can.c **** //	ptr->angle = (uint16_t)(Data[0]<<8 | Data[1]) ;
 128:Core/Src/bsp_can.c **** //	ptr->speed_rpm  = (int16_t)(Data[2]<<8 | Data[3]);
 129:Core/Src/bsp_can.c **** //	ptr->real_current = (Data[4]<<8 | Data[5])*5.f/16384.f;
 130:Core/Src/bsp_can.c **** //	ptr->hall = Data[6];
 131:Core/Src/bsp_can.c **** //	
 132:Core/Src/bsp_can.c **** //	if(ptr->angle - ptr->last_angle > 4096)
 133:Core/Src/bsp_can.c **** //		ptr->round_cnt --;
 134:Core/Src/bsp_can.c **** //	else if (ptr->angle - ptr->last_angle < -4096)
 135:Core/Src/bsp_can.c **** //		ptr->round_cnt ++;
 136:Core/Src/bsp_can.c **** //	ptr->total_angle = ptr->round_cnt * 8192 + ptr->angle - ptr->offset_angle;
 137:Core/Src/bsp_can.c **** //}
 138:Core/Src/bsp_can.c **** 
 139:Core/Src/bsp_can.c **** 
 140:Core/Src/bsp_can.c **** /*this function should be called after system+can init */
 141:Core/Src/bsp_can.c **** //void get_moto_offset(moto_measure_t *ptr, CAN_HandleTypeDef* hcan)
 142:Core/Src/bsp_can.c **** //{
 143:Core/Src/bsp_can.c **** //	ptr->angle = (uint16_t)(hcan->pRxMsg->Data[0]<<8 | hcan->pRxMsg->Data[1]) ;
 144:Core/Src/bsp_can.c **** //	ptr->offset_angle = ptr->angle;
 145:Core/Src/bsp_can.c **** //}
 146:Core/Src/bsp_can.c **** 
 147:Core/Src/bsp_can.c **** 
 148:Core/Src/bsp_can.c **** #define ABS(x)	( (x>0) ? (x) : (-x) )
 149:Core/Src/bsp_can.c **** /**
 150:Core/Src/bsp_can.c **** *@bref ÁîµÊú∫‰∏äÁîµËßíÂ∫¶=0Ôºå ‰πãÂêéÁî®Ëøô‰∏™ÂáΩÊï∞Êõ¥Êñ∞3510ÁîµÊú∫ÁöÑÁõ∏ÂØπÂºÄÊú∫ÂêéÔºà‰∏∫0ÔºâÁöÑ
 151:Core/Src/bsp_can.c **** 	*/
 152:Core/Src/bsp_can.c **** //void get_total_angle(moto_measure_t *p){
 153:Core/Src/bsp_can.c **** //	
 154:Core/Src/bsp_can.c **** //	int res1, res2, delta;
 155:Core/Src/bsp_can.c **** //	if(p->angle < p->last_angle){			//ÂèØËÉΩÁöÑÊÉÖÂÜµ
 156:Core/Src/bsp_can.c **** //		res1 = p->angle + 8192 - p->last_angle;	//Ê≠£ËΩ¨Ôºådelta=+
 157:Core/Src/bsp_can.c **** //		res2 = p->angle - p->last_angle;				//ÂèçËΩ¨	delta=-
 158:Core/Src/bsp_can.c **** //	}else{	//angle > last
 159:Core/Src/bsp_can.c **** //		res1 = p->angle - 8192 - p->last_angle ;//ÂèçËΩ¨	delta -
 160:Core/Src/bsp_can.c **** //		res2 = p->angle - p->last_angle;				//Ê≠£ËΩ¨	delta +
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s 			page 10


 161:Core/Src/bsp_can.c **** //	}
 162:Core/Src/bsp_can.c **** //	//‰∏çÁÆ°Ê≠£ÂèçËΩ¨ÔºåËÇØÂÆöÊòØËΩ¨ÁöÑËßíÂ∫¶Â∞èÁöÑÈÇ£‰∏™ÊòØÁúüÁöÑ
 163:Core/Src/bsp_can.c **** //	if(ABS(res1)<ABS(res2))
 164:Core/Src/bsp_can.c **** //		delta = res1;
 165:Core/Src/bsp_can.c **** //	else
 166:Core/Src/bsp_can.c **** //		delta = res2;
 167:Core/Src/bsp_can.c **** 
 168:Core/Src/bsp_can.c **** //	p->total_angle += delta;
 169:Core/Src/bsp_can.c **** //	p->last_angle = p->angle;
 170:Core/Src/bsp_can.c **** //}
 171:Core/Src/bsp_can.c **** 
 172:Core/Src/bsp_can.c **** 
 173:Core/Src/bsp_can.c **** void set_moto_current(CAN_HandleTypeDef* hcan, s16 iq1, s16 iq2, s16 iq3, s16 iq4)
 174:Core/Src/bsp_can.c **** {
 349              		.loc 1 174 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 4, pretend = 0, frame = 40
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		.loc 1 174 1 is_stmt 0 view .LVU109
 354 0000 30B5     		push	{r4, r5, lr}
 355              	.LCFI7:
 356              		.cfi_def_cfa_offset 12
 357              		.cfi_offset 4, -12
 358              		.cfi_offset 5, -8
 359              		.cfi_offset 14, -4
 360 0002 8BB0     		sub	sp, sp, #44
 361              	.LCFI8:
 362              		.cfi_def_cfa_offset 56
 363 0004 BDF938C0 		ldrsh	ip, [sp, #56]
 175:Core/Src/bsp_can.c **** 	CAN_TxHeaderTypeDef CanTx;
 364              		.loc 1 175 2 is_stmt 1 view .LVU110
 176:Core/Src/bsp_can.c **** 	uint8_t Data[8];
 365              		.loc 1 176 2 view .LVU111
 177:Core/Src/bsp_can.c **** 	uint32_t Mailbox=0;
 366              		.loc 1 177 2 view .LVU112
 367              		.loc 1 177 11 is_stmt 0 view .LVU113
 368 0008 0024     		movs	r4, #0
 369 000a 0194     		str	r4, [sp, #4]
 178:Core/Src/bsp_can.c **** 	
 179:Core/Src/bsp_can.c **** 	CanTx.StdId = 0x1FF;  // 0x200
 370              		.loc 1 179 2 is_stmt 1 view .LVU114
 371              		.loc 1 179 14 is_stmt 0 view .LVU115
 372 000c 40F2FF15 		movw	r5, #511
 373 0010 0495     		str	r5, [sp, #16]
 180:Core/Src/bsp_can.c **** 	CanTx.ExtId = 0;  // CAN_ID_STD, ExtId is invalid
 374              		.loc 1 180 2 is_stmt 1 view .LVU116
 375              		.loc 1 180 14 is_stmt 0 view .LVU117
 376 0012 0594     		str	r4, [sp, #20]
 181:Core/Src/bsp_can.c **** 	CanTx.IDE = CAN_ID_STD;
 377              		.loc 1 181 2 is_stmt 1 view .LVU118
 378              		.loc 1 181 12 is_stmt 0 view .LVU119
 379 0014 0694     		str	r4, [sp, #24]
 182:Core/Src/bsp_can.c **** 	CanTx.RTR = CAN_RTR_DATA;
 380              		.loc 1 182 2 is_stmt 1 view .LVU120
 381              		.loc 1 182 12 is_stmt 0 view .LVU121
 382 0016 0794     		str	r4, [sp, #28]
 183:Core/Src/bsp_can.c **** 	CanTx.DLC = 0x08;
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s 			page 11


 383              		.loc 1 183 2 is_stmt 1 view .LVU122
 384              		.loc 1 183 12 is_stmt 0 view .LVU123
 385 0018 0825     		movs	r5, #8
 386 001a 0895     		str	r5, [sp, #32]
 184:Core/Src/bsp_can.c **** 	CanTx.TransmitGlobalTime = DISABLE;
 387              		.loc 1 184 2 is_stmt 1 view .LVU124
 388              		.loc 1 184 27 is_stmt 0 view .LVU125
 389 001c 8DF82440 		strb	r4, [sp, #36]
 185:Core/Src/bsp_can.c **** 	
 186:Core/Src/bsp_can.c **** 	Data[0] = (iq1 >> 8);
 390              		.loc 1 186 2 is_stmt 1 view .LVU126
 391              		.loc 1 186 10 is_stmt 0 view .LVU127
 392 0020 41FA05F4 		asr	r4, r1, r5
 393 0024 8DF80840 		strb	r4, [sp, #8]
 187:Core/Src/bsp_can.c **** 	Data[1] = iq1;
 394              		.loc 1 187 2 is_stmt 1 view .LVU128
 395              		.loc 1 187 10 is_stmt 0 view .LVU129
 396 0028 8DF80910 		strb	r1, [sp, #9]
 188:Core/Src/bsp_can.c **** 	Data[2] = (iq2 >> 8);
 397              		.loc 1 188 2 is_stmt 1 view .LVU130
 398              		.loc 1 188 10 is_stmt 0 view .LVU131
 399 002c 42FA05F1 		asr	r1, r2, r5
 400              	.LVL16:
 401              		.loc 1 188 10 view .LVU132
 402 0030 8DF80A10 		strb	r1, [sp, #10]
 189:Core/Src/bsp_can.c **** 	Data[3] = iq2;
 403              		.loc 1 189 2 is_stmt 1 view .LVU133
 404              		.loc 1 189 10 is_stmt 0 view .LVU134
 405 0034 8DF80B20 		strb	r2, [sp, #11]
 190:Core/Src/bsp_can.c **** 	Data[4] = iq3 >> 8;
 406              		.loc 1 190 2 is_stmt 1 view .LVU135
 407              		.loc 1 190 10 is_stmt 0 view .LVU136
 408 0038 43FA05F2 		asr	r2, r3, r5
 409              	.LVL17:
 410              		.loc 1 190 10 view .LVU137
 411 003c 8DF80C20 		strb	r2, [sp, #12]
 191:Core/Src/bsp_can.c **** 	Data[5] = iq3;
 412              		.loc 1 191 2 is_stmt 1 view .LVU138
 413              		.loc 1 191 10 is_stmt 0 view .LVU139
 414 0040 8DF80D30 		strb	r3, [sp, #13]
 192:Core/Src/bsp_can.c **** 	Data[6] = iq4 >> 8;
 415              		.loc 1 192 2 is_stmt 1 view .LVU140
 416              		.loc 1 192 10 is_stmt 0 view .LVU141
 417 0044 9DF93930 		ldrsb	r3, [sp, #57]
 418              	.LVL18:
 419              		.loc 1 192 10 view .LVU142
 420 0048 8DF80E30 		strb	r3, [sp, #14]
 193:Core/Src/bsp_can.c **** 	Data[7] = iq4;
 421              		.loc 1 193 2 is_stmt 1 view .LVU143
 422              		.loc 1 193 10 is_stmt 0 view .LVU144
 423 004c 8DF80FC0 		strb	ip, [sp, #15]
 194:Core/Src/bsp_can.c **** 	
 195:Core/Src/bsp_can.c **** 	HAL_CAN_AddTxMessage(hcan, &CanTx, Data, &Mailbox);
 424              		.loc 1 195 2 is_stmt 1 view .LVU145
 425 0050 01AB     		add	r3, sp, #4
 426 0052 0DEB0502 		add	r2, sp, r5
 427 0056 04A9     		add	r1, sp, #16
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s 			page 12


 428 0058 FFF7FEFF 		bl	HAL_CAN_AddTxMessage
 429              	.LVL19:
 196:Core/Src/bsp_can.c **** }	
 430              		.loc 1 196 1 is_stmt 0 view .LVU146
 431 005c 0BB0     		add	sp, sp, #44
 432              	.LCFI9:
 433              		.cfi_def_cfa_offset 12
 434              		@ sp needed
 435 005e 30BD     		pop	{r4, r5, pc}
 436              		.loc 1 196 1 view .LVU147
 437              		.cfi_endproc
 438              	.LFE132:
 440              		.global	FlashTimer
 441              		.global	moto_chassis
 442              		.section	.bss.FlashTimer,"aw",%nobits
 443              		.align	2
 444              		.set	.LANCHOR0,. + 0
 447              	FlashTimer:
 448 0000 00000000 		.space	4
 449              		.section	.bss.moto_chassis,"aw",%nobits
 450              		.align	2
 451              		.set	.LANCHOR1,. + 0
 454              	moto_chassis:
 455 0000 00000000 		.space	192
 455      00000000 
 455      00000000 
 455      00000000 
 455      00000000 
 456              		.text
 457              	.Letext0:
 458              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 459              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 460              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 461              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 462              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 463              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_can.h"
 464              		.file 8 "Core/Inc/mytype.h"
 465              		.file 9 "Core/Inc/bsp_can.h"
 466              		.file 10 "Core/Inc/can.h"
 467              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 468              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
ARM GAS  C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 bsp_can.c
C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s:20     .text.my_can_filter_init_recv_all:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s:26     .text.my_can_filter_init_recv_all:00000000 my_can_filter_init_recv_all
C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s:89     .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s:95     .text.HAL_CAN_RxFifo0MsgPendingCallback:00000000 HAL_CAN_RxFifo0MsgPendingCallback
C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s:163    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000042 $d
C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s:167    .text.HAL_CAN_RxFifo0MsgPendingCallback:00000046 $t
C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s:331    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000012c $d
C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s:340    .text.set_moto_current:00000000 $t
C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s:346    .text.set_moto_current:00000000 set_moto_current
C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s:447    .bss.FlashTimer:00000000 FlashTimer
C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s:454    .bss.moto_chassis:00000000 moto_chassis
C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s:443    .bss.FlashTimer:00000000 $d
C:\Users\FIsh\AppData\Local\Temp\cco8VrWT.s:450    .bss.moto_chassis:00000000 $d

UNDEFINED SYMBOLS
HAL_CAN_ConfigFilter
HAL_GetTick
HAL_CAN_GetRxMessage
HAL_GPIO_TogglePin
hcan1
HAL_CAN_AddTxMessage
